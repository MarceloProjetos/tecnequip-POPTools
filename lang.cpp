#include "poptools.h"

#define SET_LANGUAGE_STRINGS(cmd,ptbr,en,es) case cmd: pPTBR = ptbr; pEN = en; pES = es; break;

/*** Inicializacao das tabelas com string de todas as linguas suportadas ***/

typedef struct strLangTableChar
{
	strLangTableChar *mapChar[255];
	char          *out;
} LangTableChar;

LangTableChar *newLangTableChar(void)
{
	LangTableChar *l = new LangTableChar;
	memset(l->mapChar, 0, sizeof(l->mapChar));

	l->out = "";

	return l;
}

void addTextToLangTable(LangTableChar *table, char *in, char *out)
{
	if(table == nullptr || in == nullptr || out == nullptr) return;

	unsigned char index = (unsigned char)*in;

	if(index--) { // Decrementa indice pois o caracter zero retorna out...
		if(table->mapChar[index] == nullptr) {
			table->mapChar[index] = newLangTableChar();
		}

		addTextToLangTable(table->mapChar[index], in + 1, out);
	} else {
		table->out = out;
	}
}

void freeLangTable(LangTableChar *table)
{
	int i;
	for(i = 0; i < 255; i++) {
		if(table->mapChar[i] != nullptr) {
			freeLangTable(table->mapChar[i]);
			delete table->mapChar[i];
		}
	}
}

static LangTableChar *LangPtTable;
static LangTableChar *LangEsTable;

void freeLangTables(void)
{
	freeLangTable(LangPtTable);
	freeLangTable(LangEsTable);

	delete LangPtTable;
	delete LangEsTable;
}

void initLangTables(void)
{
	// Idioma Português
	LangPtTable = newLangTableChar();

	addTextToLangTable(LangPtTable, "Target frequency %d Hz, closest achievable is %d Hz (warning, >5%% error).", "Freqüência do Micro %d Hz, a melhor aproximação é %d Hz (aviso, >5%% error).");
	addTextToLangTable(LangPtTable, "Compile successful; wrote IHEX for AVR to '%s'.\r\n\r\nRemember to set the processor configuration (fuses) correctly. This does not happen automatically.", "Compilação sucedida; se escrito em IHEX para AVR para '%s'.\r\n\r\nLembrar de anotar as configurações (fuses) do micro, corretamente. Isto não acontece automaticamente.");
	addTextToLangTable(LangPtTable, "( ) Normal", "( ) Normal");
	addTextToLangTable(LangPtTable, "(/) Negated", "(/) Negado");
	addTextToLangTable(LangPtTable, "(S) Set-Only", "(S) Ativar");
	addTextToLangTable(LangPtTable, "(R) Reset-Only", "(R) Desativar");
	addTextToLangTable(LangPtTable, "Pin on MCU", "Saida Digital");
	addTextToLangTable(LangPtTable, "Coil", "Bobina");
	addTextToLangTable(LangPtTable, "Comment", "Comentário");
	addTextToLangTable(LangPtTable, "Cycle Time (ms):", "Tempo de Ciclo (ms):");
	addTextToLangTable(LangPtTable, "Crystal Frequency (MHz):", "Freqüência Cristal (MHz):");
	addTextToLangTable(LangPtTable, "UART Baud Rate (bps):", "Baud Rate UART (bps):");
	addTextToLangTable(LangPtTable, "Serie (UART) will use pins %d and %d.\r\n\r\n", "Porta Serial (UART) usará os pinos %d e %d.\r\n\r\n");
	addTextToLangTable(LangPtTable, "Please select a micro with a UART.\r\n\r\n", "Por favor, selecione um micro com UART.\r\n\r\n");
	addTextToLangTable(LangPtTable, "No serial instructions (UART Send/UART Receive) are in use; add one to program before setting baud rate.\r\n\r\n", "");
	addTextToLangTable(LangPtTable, "The cycle time for the 'PLC' runtime generated by LDmicro is user-configurable. Very short cycle times may not be achievable due to processor speed constraints, and very long cycle times may not be achievable due to hardware overflows. Cycle times between 10 ms and 100 ms will usually be practical.\r\n\r\nThe compiler must know what speed crystal you are using with the micro to convert between timing in clock cycles and timing in seconds. A 4 MHz to 20 MHz crystal is typical; check the speed grade of the part you are using to determine the maximum allowable clock speed before choosing a crystal.", "");
	addTextToLangTable(LangPtTable, "PLC Configuration", "Configuração PLC");
	addTextToLangTable(LangPtTable, "Zero cycle time not valid; resetting to 10 ms.", "Não é válido um tempo de ciclo 0; retornando a 10 ms.");
	addTextToLangTable(LangPtTable, "Source", "Fonte");
	addTextToLangTable(LangPtTable, "Internal Relay", "Rele Interno");
	addTextToLangTable(LangPtTable, "Input pin", "Entrada Digital");
	addTextToLangTable(LangPtTable, "Output pin", "Saida Digital");
	addTextToLangTable(LangPtTable, "|/| Negated", "|/| Negado");
	addTextToLangTable(LangPtTable, "Contacts", "Contatos");
	addTextToLangTable(LangPtTable, "No ADC or ADC not supported for selected micro.", "O micro selecionado não possui ADC ou não suporta.");
	addTextToLangTable(LangPtTable, "Assign:", "Atribua:");
	addTextToLangTable(LangPtTable, "No microcontroller has been selected. You must select a microcontroller before you can assign I/O pins.\r\n\r\nSelect a microcontroller under the Settings menu and try again.", "Nenhum micro esta selecionado. Você deve selecionar um micro antes de  atribuir os pinos E/S.\r\n\r\nSelecione um micro no menu de configuração e tente novamente.");
	addTextToLangTable(LangPtTable, "I/O Pin Assignment", "Atribuição de Pinos de E/S");
	addTextToLangTable(LangPtTable, "Can't specify I/O assignment for ANSI C target; compile and see comments in generated source code.", "Não se pode atribuir as E/S especificadas para o ANSI C gerado; compile e veja os comentários gerados no código fonte.");
	addTextToLangTable(LangPtTable, "Can't specify I/O assignment for interpretable target; see comments in reference implementation of interpreter.", "Não se pode atribuir as E/S especificadas para o código gerado para o interpretador; veja os comentários na implementação do interpretador.");
	addTextToLangTable(LangPtTable, "Can only assign pin number to input/output pins or general variable.", "Somente pode atribuir números dos pinos aos pinos de Entrada/Saída ou Variável de Uso Geral.");
	addTextToLangTable(LangPtTable, "No ADC or ADC not supported for this micro.", "Este micro não tem ADC ou não é suportado.");
	addTextToLangTable(LangPtTable, "Rename I/O from default name ('%s') before assigning MCU pin.", "Renomear as E/S para nome padrão ('%s') antes de atribuir um pino do micro.");
	addTextToLangTable(LangPtTable, "I/O Pin", "Pino E/S");
	addTextToLangTable(LangPtTable, "(no pin)", "(sem pino)");
	addTextToLangTable(LangPtTable, "<UART needs!>", "<Se necessitar UART!>");
	addTextToLangTable(LangPtTable, "<PWM needs!>", "<Se necessitar PWM!>");
	addTextToLangTable(LangPtTable, "<not an I/O!>", "<Não é uma E/S!>");
	addTextToLangTable(LangPtTable, "Export As Text", "Exportar como Texto");
	addTextToLangTable(LangPtTable, "Couldn't write to '%s'.", "Não pode gravar para '%s'.");
	addTextToLangTable(LangPtTable, "Compile To", "Compilar Para");
	addTextToLangTable(LangPtTable, "Must choose a target microcontroller before compiling.", "Deve selecionar um microcontrolador antes de compilar.");
	addTextToLangTable(LangPtTable, "UART function used but not supported for this micro.", "Função UART é usada porem não suportada por este micro.");
	addTextToLangTable(LangPtTable, "PWM function used but not supported for this micro.", "Função PWM é usada porem não suportada por este micro.");
	addTextToLangTable(LangPtTable, "The program has changed since it was last saved.\r\n\r\nDo you want to save the changes?", "Este programa contém mudanças desde a ultima vez salva.\r\n\r\n Você quer salvar as mudanças?");
	addTextToLangTable(LangPtTable, "--add comment here--", "--Adicione Comentários Aqui--");
	addTextToLangTable(LangPtTable, "Start new program?", "Iniciar um novo programa?");
	addTextToLangTable(LangPtTable, "Couldn't open '%s'.", "Não pode abrir '%s'.");
	addTextToLangTable(LangPtTable, "Name", "Nome");
	addTextToLangTable(LangPtTable, "State", "Estado");
	addTextToLangTable(LangPtTable, "Pin on Processor", "Nro Porta E/S");
	addTextToLangTable(LangPtTable, "MCU Port", "Porta do PLC");
	addTextToLangTable(LangPtTable, "POPTools - Simulation (Running)", "POPTools - Simulação (Executando)");
	addTextToLangTable(LangPtTable, "POPTools - Simulation (Stopped)", "POPTools - Simulação (Parado)");
	addTextToLangTable(LangPtTable, "POPTools - Program Editor", "POPTools");
	addTextToLangTable(LangPtTable, " - (not yet saved)", " - (ainda não salvo)");
	addTextToLangTable(LangPtTable, "&New\tCtrl+N", "&Novo\tCtrl+N");
	addTextToLangTable(LangPtTable, "&Open...\tCtrl+O", "&Abrir...\tCtrl+O");
	addTextToLangTable(LangPtTable, "&Save\tCtrl+S", "&Salvar\tCtrl+S");
	addTextToLangTable(LangPtTable, "Save &As...", "Salvar &Como...");
	addTextToLangTable(LangPtTable, "&Export As Text...\tCtrl+E", "&Exportar como Texto...\tCtrl+E");
	addTextToLangTable(LangPtTable, "E&xit", "&Sair");
	addTextToLangTable(LangPtTable, "&Undo\tCtrl+Z", "&Desfazer\tCtrl+Z");
	addTextToLangTable(LangPtTable, "&Redo\tCtrl+Y", "&Refazer\tCtrl+Y");
	addTextToLangTable(LangPtTable, "Insert Rung &Before\tShift+INS", "Inserir Linha (Rung) &Antes\tShift+INS");
	addTextToLangTable(LangPtTable, "Insert Rung &After\tINS", "Inserir Linha (Rung) &Depois\tINS");
	addTextToLangTable(LangPtTable, "Move Selected Rung &Up\tShift+Up", "Mover Linha Selecionada (Rung) &Acima\tShift+Up");
	addTextToLangTable(LangPtTable, "Move Selected Rung &Down\tShift+Down", "Mover Linha Selecionada(Rung) &Abaixo\tShift+Down");
	addTextToLangTable(LangPtTable, "&Delete Selected Element\tDel", "&Apagar Elemento Selecionado\tDel");
	addTextToLangTable(LangPtTable, "D&elete Rung\tShift+Del", "A&pagar Linha (Rung) \tShift+Del");
	addTextToLangTable(LangPtTable, "Insert Co&mment\tF2", "Inserir Co&mentário\t;");
	addTextToLangTable(LangPtTable, "Insert &Contacts\tC", "Inserir &Contatos\tC");
	addTextToLangTable(LangPtTable, "Insert OSR (One Shot Rising)\t/", "Inserir OSR (Detecta Borda de Subida)\t/");
	addTextToLangTable(LangPtTable, "Insert OSF (One Shot Falling)\t\\", "Inserir OSF (Detecta Borda de Descida)\t\\");
	addTextToLangTable(LangPtTable, "Insert T&ON (Delayed Turn On)\tO", "Inserir T&ON (Temporizador para Ligar)\tO");
	addTextToLangTable(LangPtTable, "Insert TO&F (Delayed Turn Off)\tF", "Inserir TO&F (Temporizador para Desligar)\tF");
	addTextToLangTable(LangPtTable, "Insert R&TO (Retentive Delayed Turn On)\tT", "Inserir R&TO (Temporizar Retentivo para Ligar)\tT");
	addTextToLangTable(LangPtTable, "Insert CT&U (Count Up)\tI", "Inserir CT&U (Contador Incremental)\tI");
	addTextToLangTable(LangPtTable, "Insert CT&D (Count Down)\tD", "Inserir CT&D (Contador Decremental)\tD");
	addTextToLangTable(LangPtTable, "Insert CT&C (Count Circular)\tShift+C", "Inserir CT&C (Contador Circular)\tShift+C");
	addTextToLangTable(LangPtTable, "Insert EQU (Compare for Equals)\t=", "Inserir EQU (Comparar se é Igual)\t=");
	addTextToLangTable(LangPtTable, "Insert NEQ (Compare for Not Equals)\t!", "Inserir NEQ (Comparar se é Diferente)\t!");
	addTextToLangTable(LangPtTable, "Insert GRT (Compare for Greater Than)\t>", "Inserir GRT (Comparar se Maior Que)\t>");
	addTextToLangTable(LangPtTable, "Insert GEQ (Compare for Greater Than or Equal)\t.", "Inserir GEQ (Comparar se Maior ou Igual Que)\t.");
	addTextToLangTable(LangPtTable, "Insert LES (Compare for Less Than)\t<", "Inserir LES (Comparar se Menor Que)\t<");
	addTextToLangTable(LangPtTable, "Insert LEQ (Compare for Less Than or Equal)\t,", "Inserir LEQ (Comparar se Menor ou Igual Que)\t,");
	addTextToLangTable(LangPtTable, "Insert Open-Circuit", "Inserir Circuito Aberto");
	addTextToLangTable(LangPtTable, "Insert Short-Circuit", "Inserir Circuito Fechado");
	addTextToLangTable(LangPtTable, "Insert Master Control Relay", "Inserir Rele de Controle Mestre");
	addTextToLangTable(LangPtTable, "Insert Coi&l\tL", "Inserir &Bobina\tL");
	addTextToLangTable(LangPtTable, "Insert R&ES (Counter/RTO Reset)\tE", "Inserir R&ES (Contador/RTO Reinicia)\tE");
	addTextToLangTable(LangPtTable, "Insert MOV (Move)\tM", "Inserir MOV (Mover)\tM");
	addTextToLangTable(LangPtTable, "Insert ADD (16-bit Integer Add)\t+", "Inserir ADD (Soma Inteiro 16-bit)\t+");
	addTextToLangTable(LangPtTable, "Insert SUB (16-bit Integer Subtract)\t-", "Inserir SUB (Subtrair Inteiro 16-bit)\t-");
	addTextToLangTable(LangPtTable, "Insert MUL (16-bit Integer Multiply)\t*", "Inserir MUL (Multiplica Inteiro 16-bit)\t*");
	addTextToLangTable(LangPtTable, "Insert DIV (16-bit Integer Divide)\tShift+/", "Inserir DIV (Divide Inteiro 16-bit)\tShift+/");
	addTextToLangTable(LangPtTable, "Insert Shift Register", "Inserir Registro de Troca");
	addTextToLangTable(LangPtTable, "Insert Look-Up Table", "Inserir Tabela de Busca");
	addTextToLangTable(LangPtTable, "Insert Piecewise Linear", "Inserir Linearização por Segmentos");
	addTextToLangTable(LangPtTable, "Send Formatted String Over UART", "Escrita de String Formatada na Serial RS485");
	addTextToLangTable(LangPtTable, "Receive Formatted String Over UART", "Leitura de String Formatada na Serial RS485");
	addTextToLangTable(LangPtTable, "Insert &UART Send", "Enviar caracter RS-485");
	addTextToLangTable(LangPtTable, "Insert &UART Receive", "Receber caracter RS-485");
	addTextToLangTable(LangPtTable, "Insert Set PWM Output\tW", "Inserir Valor de Saída PWM\tW");
	addTextToLangTable(LangPtTable, "Insert A/D Converter Read\tCtrl+A", "Inserir Leitura do Conversor A/D\tCtrl+A");
	addTextToLangTable(LangPtTable, "Insert Make Persistent", "Inserir Fazer Permanente");
	addTextToLangTable(LangPtTable, "Make Norm&al\tA", "Fazer Norm&al\tA");
	addTextToLangTable(LangPtTable, "Make &Negated\tN", "Fazer &Negado\tN");
	addTextToLangTable(LangPtTable, "Make &Set-Only\tS", "Fazer &Ativar-Somente\tS");
	addTextToLangTable(LangPtTable, "Make &Reset-Only\tR", "Fazer&Desativar-Somente\tR");
	addTextToLangTable(LangPtTable, "&MCU Parameters...", "&Parâmetros do PLC...");
	addTextToLangTable(LangPtTable, "(no microcontroller)", "(sem microcontrolador)");
	addTextToLangTable(LangPtTable, "&Microcontroller", "&Microcontrolador");
	addTextToLangTable(LangPtTable, "Si&mulation Mode\tCtrl+M", "Modo Si&mulação \tCtrl+M");
	addTextToLangTable(LangPtTable, "Start &Real-Time Simulation\tCtrl+R", "Iniciar Simulação em Tempo &Real\tCtrl+R");
	addTextToLangTable(LangPtTable, "&Halt Simulation\tCtrl+H", "Parar Simulação em Tempo Real\tCtrl+H");
	addTextToLangTable(LangPtTable, "Single &Cycle\tSpace", "Simples &Ciclo\tEspaço");
	addTextToLangTable(LangPtTable, "&Compile\tF5", "&Compilar\tF5");
	addTextToLangTable(LangPtTable, "Compile &As...", "Compilar &Como...");
	addTextToLangTable(LangPtTable, "&Manual...\tF1", "&Manual...\tF1");
	addTextToLangTable(LangPtTable, "&About...", "&Sobre...");
	addTextToLangTable(LangPtTable, "&File", "&Arquivo");
	addTextToLangTable(LangPtTable, "&Edit", "&Editar");
	addTextToLangTable(LangPtTable, "&Settings", "&Configurações");
	addTextToLangTable(LangPtTable, "&Instruction", "&Instruções");
	addTextToLangTable(LangPtTable, "Si&mulate", "Si&mular");
	addTextToLangTable(LangPtTable, "&Compile", "&Compilar");
	addTextToLangTable(LangPtTable, "&Help", "&Ajuda");
	addTextToLangTable(LangPtTable, "no MCU selected", "Micro não selecionado");
	addTextToLangTable(LangPtTable, "cycle time %.2f ms", "tempo de ciclo %.0f ms");
	addTextToLangTable(LangPtTable, "processor clock %.4f MHz", "clock do processador %.0f MHz");
	addTextToLangTable(LangPtTable, "Internal error relating to PIC paging; make program smaller or reshuffle it.", "Erro interno relativo a paginação do PIC; fazer um programa menor ou reorganiza-lo");
	addTextToLangTable(LangPtTable, "PWM frequency too fast.", "Freqüência do PWM muito alta.");
	addTextToLangTable(LangPtTable, "PWM frequency too slow.", "Freqüência do PWM muito baixa.");
	addTextToLangTable(LangPtTable, "Cycle time too fast; increase cycle time, or use faster crystal.", "Tempo de Ciclo muito rápido; aumentar tempo do ciclo, ou usar um cristal de maior Mhz.");
	addTextToLangTable(LangPtTable, "Cycle time too slow; decrease cycle time, or use slower crystal.", "Tempo de Ciclo muito lento; diminuir tempo do ciclo, ou usar um cristal de menor Mhz.");
	addTextToLangTable(LangPtTable, "Couldn't open file '%s'", "Não pode abrir o arquivo '%s'");
	addTextToLangTable(LangPtTable, "Zero baud rate not possible.", "Zero Baud Rate não é possível.");
	addTextToLangTable(LangPtTable, "Compile successful; wrote IHEX for PIC16 to '%s'.\r\n\r\nConfiguration word (fuses) has been set for crystal oscillator, BOD enabled, LVP disabled, PWRT enabled, all code protection off.\r\n\r\nUsed %d/%d words of program flash (chip %d%% full).", "Compilação sucedida; escrito IHEX para PIC16 em '%s'.\r\n\r\nBits de Configuração (fuses) foi estabelecido para o cristal oscilador, BOD ativado, LVP desativado, PWRT ativado, Todos os bits de proteção desativados.\r\n\r\nUsadas %d/%d palavras de programa em flash (Chip %d%% completo).");
	addTextToLangTable(LangPtTable, "Type", "Tipo");
	addTextToLangTable(LangPtTable, "Timer", "Temporizador");
	addTextToLangTable(LangPtTable, "Counter", "Contador");
	addTextToLangTable(LangPtTable, "Reset", "Reiniciar");
	addTextToLangTable(LangPtTable, "OK", "OK");
	addTextToLangTable(LangPtTable, "Cancel", "Cancelar");
	addTextToLangTable(LangPtTable, "Empty textbox; not permitted.", "Texto vazio; não é permitido");
	addTextToLangTable(LangPtTable, "Bad use of quotes: <%s>", "Mau uso das aspas: <%s>");
	addTextToLangTable(LangPtTable, "Turn-On Delay", "Atraso Ligar");
	addTextToLangTable(LangPtTable, "Turn-Off Delay", "Atraso Desligar");
	addTextToLangTable(LangPtTable, "Retentive Turn-On Delay", "Atraso com memória");
	addTextToLangTable(LangPtTable, "Delay (ms):", "Tempo (ms):");
	addTextToLangTable(LangPtTable, "Delay too long; maximum is 2**31 us.", "Tempo muito longo; Maximo 2**31 us.");
	addTextToLangTable(LangPtTable, "Delay cannot be zero or negative.", "Tempo não pode ser zero ou negativo.");
	addTextToLangTable(LangPtTable, "Count Up", "Contador Crescente");
	addTextToLangTable(LangPtTable, "Count Down", "Contador Decrescente");
	addTextToLangTable(LangPtTable, "Circular Counter", "Contador Circular");
	addTextToLangTable(LangPtTable, "Max value:", "Valor Max:");
	addTextToLangTable(LangPtTable, "True if >= :", "Verdadeiro se >= :");
	addTextToLangTable(LangPtTable, "True if <= :", "Verdadeiro se <= :");
	addTextToLangTable(LangPtTable, "If Equals", "Se Igual");
	addTextToLangTable(LangPtTable, "If Not Equals", " Se Diferente");
	addTextToLangTable(LangPtTable, "If Greater Than", "Se Maior Que");
	addTextToLangTable(LangPtTable, "If Greater Than or Equal To", "Se Maior ou Igual Que");
	addTextToLangTable(LangPtTable, "If Less Than", "Se Menor Que");
	addTextToLangTable(LangPtTable, "If Less Than or Equal To", "Se Menor ou Igual Que");
	addTextToLangTable(LangPtTable, "'Closed' if:", "'Fechado' se:");
	addTextToLangTable(LangPtTable, "Move", "Mover Valor");
	addTextToLangTable(LangPtTable, "Read A/D Converter", "Ler Conversor A/D");
	addTextToLangTable(LangPtTable, "Duty cycle var:", "% Ciclo Trabalho:");
	addTextToLangTable(LangPtTable, "Frequency (Hz):", "Frequencia (Hz):");
	addTextToLangTable(LangPtTable, "Set PWM Duty Cycle", "Acionar PWM Duty Cycle");
	addTextToLangTable(LangPtTable, "Source:", "Origem:");
	addTextToLangTable(LangPtTable, "Receive from UART", "Recebe da UART");
	addTextToLangTable(LangPtTable, "Send to UART", "Envia para UART");
	addTextToLangTable(LangPtTable, "Add", "Somar");
	addTextToLangTable(LangPtTable, "Subtract", "Subtrair");
	addTextToLangTable(LangPtTable, "Multiply", "Multiplicar");
	addTextToLangTable(LangPtTable, "Divide", "Dividir");
	addTextToLangTable(LangPtTable, "Destination:", "Destino:");
	addTextToLangTable(LangPtTable, "is set := :", "esta acionado := :");
	addTextToLangTable(LangPtTable, "Name:", "Nome:");
	addTextToLangTable(LangPtTable, "Stages:", "Fases:");
	addTextToLangTable(LangPtTable, "Shift Register", "Fila de Variáveis");
	addTextToLangTable(LangPtTable, "Not a reasonable size for a shift register.", "Não é um tamanho razoável para uma fila de variáveis.");
	addTextToLangTable(LangPtTable, "String:", "String:");
	addTextToLangTable(LangPtTable, "Formatted String Over UART", "String Formatada para UART");
	addTextToLangTable(LangPtTable, "Variable:", "Variavel:");
	addTextToLangTable(LangPtTable, "Make Persistent", "Fazer Permanente");
	addTextToLangTable(LangPtTable, "Too many elements in subcircuit!", "Excesso de elementos no SubCircuito!");
	addTextToLangTable(LangPtTable, "Too many rungs!", "Muitas Linhas (rungs)!");
	addTextToLangTable(LangPtTable, "Error", "Error");
	addTextToLangTable(LangPtTable, "ANSI C target does not support peripherals (UART, PWM, ADC, EEPROM). Skipping that instruction.", "ANSI C não suporta periféricos (UART, PWM, ADC, EEPROM). Evite essas instruções.");
	addTextToLangTable(LangPtTable, "Compile successful; wrote C source code to '%s'.\r\n\r\nThis is not a complete C program. You have to provide the runtime and all the I/O routines. See the comments in the source code for information about how to do this.", "Compilação sucedida: Código Fonte escrito em C para '%s'.\r\n\r\nEste programa nao é completo em C. Você tem que fornecer o tempo de execução e de todas as rotinas de E/S. Veja os comentários no código fonte para mais informação sobre como fazer isto.");
	addTextToLangTable(LangPtTable, "Cannot delete rung; program must have at least one rung.", "Não pode apagar a Linha (rung); O programa deve conter ao menos uma Linha (rung).");
	addTextToLangTable(LangPtTable, "Out of memory; simplify program or choose microcontroller with more memory.", "Fora de Memória; Simplifique o programa ou escolha um microcontrolador com mais memória.");
	addTextToLangTable(LangPtTable, "Must assign pins for all ADC inputs (name '%s').", "Deve associar pinos para todas as entradas do ADC (nome '%s').");
	addTextToLangTable(LangPtTable, "Internal limit exceeded (number of vars)", "Limite interno excedido (numero de variáveis)");
	addTextToLangTable(LangPtTable, "Internal relay '%s' never assigned; add its coil somewhere.", "Rele Interno'%s' não foi associado; adicione esta bobina em outro lugar.");
	addTextToLangTable(LangPtTable, "Must assign pins for all I/O.\r\n\r\n'%s' is not assigned.", "Deve associar pinos a todas E/S.\r\n\r\n'%s' não esta associado.");
	addTextToLangTable(LangPtTable, "UART in use; pins %d and %d reserved for that.", "UART em uso; pinos %d e %d reservado para isso.");
	addTextToLangTable(LangPtTable, "PWM in use; pin %d reserved for that.", "PWM em uso; pino %d reservada para isso.");
	addTextToLangTable(LangPtTable, "UART baud rate generator: divisor=%d actual=%.4f for %.2f%% error.\r\n\r\nThis is too large; try a different baud rate (slower probably), or a crystal frequency chosen to be divisible by many common baud rates (e.g. 3.6864 MHz, 14.7456 MHz).\r\n\r\nCode will be generated anyways but serial may be unreliable or completely broken.", "Gerador UART baud rate: divisor=%d atual=%.4f para %.2f%% error.\r\n\r\nEste é muito grande; Tente com outro valor (provavelmente menor), ou um cristal cuja freqüência seja divisível pelos baud rate mais comuns (p.e. 3.6864MHz, 14.7456MHz).\r\n\r\nO código será gerado de qualquer maneira, porem a serial poderá ser incerta ou completamente fragmentada.");
	addTextToLangTable(LangPtTable, "UART baud rate generator: too slow, divisor overflows. Use a slower crystal or a faster baud rate.\r\n\r\nCode will be generated anyways but serial will likely be completely broken.", "Gerador UART baud rate: muito lento, divisor excedido. Use um cristal mais lento ou um baud rate maior.\r\n\r\nO código será gerado de qualquer maneira, porem a serial poderá ser incerta ou completamente fragmentada..");
	addTextToLangTable(LangPtTable, "Couldn't open '%s'\n", "Não pode abrir '%s'\n");
	addTextToLangTable(LangPtTable, "Timer period too short (needs faster cycle time).", "Período de Tempo muito curto (necessitara de um tempo de ciclo maior).");
	addTextToLangTable(LangPtTable, "Timer period too long (max 2147483647 times cycle time); use a slower cycle time.", "Tempo do Temporizador muito grande(max. 2147483647 tempo de ciclo); use um tempo de ciclo menor.");
	addTextToLangTable(LangPtTable, "Constant %d out of range: -2147483648 to 2147483647 inclusive.", "Constante %d fora do range: -2147483648 a 2147483647 inclusive.");
	addTextToLangTable(LangPtTable, "Move instruction: '%s' not a valid destination.", "Instrução Mover: o destino '%s' não é válido.");
	addTextToLangTable(LangPtTable, "Math instruction: '%s' not a valid destination.", "Instruções Math: o destino '%s' não é válido.");
	addTextToLangTable(LangPtTable, "Math instruction: '%s' divided by zero!", "Instruções Math: '%s' dividido por zero!");
	addTextToLangTable(LangPtTable, "Piecewise linear lookup table with zero elements!", "Consulta da Tabela de Linearização por Segmentos com elementos zero!");
	addTextToLangTable(LangPtTable, "x values in piecewise linear table must be strictly increasing.", "Os valores X na Tabela de Linearização por Segmentos deve ser estritamente incrementais.");
	addTextToLangTable(LangPtTable, "Numerical problem with piecewise linear lookup table. Either make the table entries smaller, or space the points together more closely.\r\n\r\nSee the help file for details.", "Problema numérico com a Tabela de Linearização por segmentos. Faça qualquer tabela com entradas menores. ou espace os pontos para mais pròximo.\r\n\r\nVeja em ajuda para mais detalhes.");
	addTextToLangTable(LangPtTable, "Multiple escapes (\\0-9) present in format string, not allowed.", "Não é permitido mais de um caractere especial (\\0-9) dentro da string formatada.");
	addTextToLangTable(LangPtTable, "Bad escape: correct form is \\xAB.", "Caractere Especial com Erro: A forma correta é \\xAB.");
	addTextToLangTable(LangPtTable, "Bad escape '\\%c'", "Caractere Especial com Erro '\\%c'");
	addTextToLangTable(LangPtTable, "Variable is interpolated into formatted string, but none is specified.", "A variável é interpolada dentro da string formatada, mas nenhuma é especificado.");
	addTextToLangTable(LangPtTable, "No variable is interpolated into formatted string, but a variable name is specified. Include a string like '\\-3', or leave variable name blank.", "Nenhuma variável esta interpolada dentro da string formatada, porem um nome de variável é especificada. Inclua uma string como '\\-3', ou deixe o nome da variável em branco.");
	addTextToLangTable(LangPtTable, "Empty row; delete it or add instructions before compiling.", "Linha Vazia; apague ou adicione instruções antes de compilar.");
	addTextToLangTable(LangPtTable, "Couldn't write to '%s'", "Não pode ser gravado para  '%s'.");
	addTextToLangTable(LangPtTable, "Unsupported op (anything ADC, PWM, UART, EEPROM) for interpretable target.", "Op não suportada no interpretador (algum ADC, PWM, UART, EEPROM).");
	addTextToLangTable(LangPtTable, "Compile successful; wrote interpretable code to '%s'.\r\n\r\nYou probably have to adapt the interpreter to your application. See the documentation.", "Compilação sucedida: Código para interpretador escrito para '%s'.\r\n\r\nVocê provavelmente tem que adaptar o interpretador para sua aplicação. Veja a documentação.");
	addTextToLangTable(LangPtTable, "Microcontroller '%s' not supported.\r\n\r\nDefaulting to no selected MCU.", "Microcontrolador '%s' não suportado.\r\n\r\nFalha nenhum Micro selecionado.");
	addTextToLangTable(LangPtTable, "File format error; perhaps this program is for a newer version of LDmicro?", "Erro no formato de arquivo; talvez este programa é para uma versão mais nova do POPTools?.");
	addTextToLangTable(LangPtTable, "Index:", "Índice:");
	addTextToLangTable(LangPtTable, "Points:", "Pontos:");
	addTextToLangTable(LangPtTable, "Count:", "Contador:");
	addTextToLangTable(LangPtTable, "Edit table of ASCII values like a string", "Editar tabela do ASCII, valores como uma string");
	addTextToLangTable(LangPtTable, "Look-Up Table", "Buscar na Tabela");
	addTextToLangTable(LangPtTable, "Piecewise Linear Table", "Tabela de Linearização por Segmentos");
	addTextToLangTable(LangPtTable, "POPTools Error", "POPTools Erro");
	addTextToLangTable(LangPtTable, "Compile Successful", "Compilação Sucedida");
	addTextToLangTable(LangPtTable, "digital in", "entrada digital");
	addTextToLangTable(LangPtTable, "digital out", "saída digital");
	addTextToLangTable(LangPtTable, "int. relay", "rele interno");
	addTextToLangTable(LangPtTable, "UART tx", "UART tx");
	addTextToLangTable(LangPtTable, "UART rx", "UART rx");
	addTextToLangTable(LangPtTable, "PWM out", "saída PWM");
	addTextToLangTable(LangPtTable, "turn-on delay", "ativar atraso");
	addTextToLangTable(LangPtTable, "turn-off delay", "desativar atraso");
	addTextToLangTable(LangPtTable, "retentive timer", "Atraso com memória");
	addTextToLangTable(LangPtTable, "counter", "contador");
	addTextToLangTable(LangPtTable, "general var", "var geral");
	addTextToLangTable(LangPtTable, "adc input", "entrada adc");
	addTextToLangTable(LangPtTable, "<corrupt!>", "<corrompido!>");
	addTextToLangTable(LangPtTable, "(not assigned)", "(sem atribuição)");
	addTextToLangTable(LangPtTable, "<no UART!>", "<sem UART!>");
	addTextToLangTable(LangPtTable, "<no PWM!>", "<sem PWM!>");
	addTextToLangTable(LangPtTable, "TOF: variable cannt be used elsewhere", "TOF: a variável não pode ser usada em outra parte");
	addTextToLangTable(LangPtTable, "TON: variable cannot be used elsewhere", "TON: a variável não pode ser usada em outra parte");
	addTextToLangTable(LangPtTable, "RTO: variable can only be used for RES elsewhere", "RTO: a variável somente pode ser usada como RES em outra parte");
	addTextToLangTable(LangPtTable, "Variable '%s' not assigned to, e.g. with a MOV statement, an ADD statement, etc.\r\n\r\nThis is probably a programming error; now it will always be zero.", "variável '%s' não atribuída, p.e. com o comando MOV, comando ADD, etc.\r\n\r\nIsto é provavelmente um erro de programação; será sempre zero.");
	addTextToLangTable(LangPtTable, "Variable for '%s' incorrectly assigned: %s.", "Variável para '%s' atribuída incorretamente : %s.");
	addTextToLangTable(LangPtTable, "Division by zero; halting simulation", "Divisão por zero; Parando simulação");
	addTextToLangTable(LangPtTable, "!!!too long!!!", "!Muito longo!");
	addTextToLangTable(LangPtTable, "\n\nI/O ASSIGNMENT:\n\n", "\n\nE/S ATRIBUIDA:\n\n");
	addTextToLangTable(LangPtTable, "  Name                       | Type               | Pin\n", "  Nome                       | Tipo               | Pino\n");
	addTextToLangTable(LangPtTable, "Serial (UART) will use pins %d and %d.\r\n\r\n", "A porta Serial (UART) usará os pinos %d e %d.\r\n\r\n");
	addTextToLangTable(LangPtTable, "About LDmicro", "Sobre POPTools");
	addTextToLangTable(LangPtTable, "POPTools Help", "Ajuda POPTools");
	addTextToLangTable(LangPtTable, "", "'%s' deve ser número!");
	addTextToLangTable(LangPtTable, "", "'%s' fora dos limites! Deve estar entre %d e %d.");
	addTextToLangTable(LangPtTable, "", "'%s' não pode ser número!");
	addTextToLangTable(LangPtTable, "", "'Nome' deve ser um contador ou timer!");
	addTextToLangTable(LangPtTable, "", "%s '%s' inválido!\n\nVariável: Apenas letras (A a Z), números ou _ (underline) e não inicar com número\nNúmero: Apenas números, podendo iniciar por - (menos)");
	addTextToLangTable(LangPtTable, "", "(GMT-01:00) Açores, Cabo Verde");
	addTextToLangTable(LangPtTable, "", "(GMT-02:00) Atlântico Central");
	addTextToLangTable(LangPtTable, "", "(GMT-03:00) Brasilia, Buenos Aires");
	addTextToLangTable(LangPtTable, "", "(GMT-04:00) Rio Branco, Manaus, Caracas, La Paz");
	addTextToLangTable(LangPtTable, "", "(GMT-05:00) Lima, Bogotá");
	addTextToLangTable(LangPtTable, "", "(GMT-06:00) América Central, Hora Central EUA/Canadá");
	addTextToLangTable(LangPtTable, "", "(GMT-07:00) Hora das Montanhas (EUA e Canadá)");
	addTextToLangTable(LangPtTable, "", "(GMT-08:00) Hora do Pacífico");
	addTextToLangTable(LangPtTable, "", "(GMT-09:00) Alasca");
	addTextToLangTable(LangPtTable, "", "(GMT-10:00) Hawaí");
	addTextToLangTable(LangPtTable, "", "(GMT-11:00) Ilhas Midway,Samoa");
	addTextToLangTable(LangPtTable, "", "(GMT-12:00) Linha de Data Internacional Oeste");
	addTextToLangTable(LangPtTable, "", "(GMT 00:00) Hora de Greenwich: Londres, Dublin, Lisboa");
	addTextToLangTable(LangPtTable, "", "(GMT+01:00) Berlim, Estocolmo, Roma, Bruxelas");
	addTextToLangTable(LangPtTable, "", "(GMT+02:00) Atenas, Helsinque, Leste Europeu, Jerusalém");
	addTextToLangTable(LangPtTable, "", "(GMT+03:00) Bagdá, Kuwait, Nairóbi, Moscou,Riad");
	addTextToLangTable(LangPtTable, "", "(GMT+04:00) Abu Dhabi, Mascate, Hora Padrão do Cáucaso");
	addTextToLangTable(LangPtTable, "", "(GMT+05:00) Islamabad, Karachi, Ekaterinburgo");
	addTextToLangTable(LangPtTable, "", "(GMT+06:00) Almaty, Dacca");
	addTextToLangTable(LangPtTable, "", "(GMT+07:00) Bangcoc, Jacarta, Hanói");
	addTextToLangTable(LangPtTable, "", "(GMT+08:00) Pequim, Hong Kong, Taiwan, Cingapura");
	addTextToLangTable(LangPtTable, "", "(GMT+09:00) Tóquio, Osaka, Sapporo, Seul, Yakutsk");
	addTextToLangTable(LangPtTable, "", "(GMT+10:00) Brisbane, Camberra, Melbourne, Sydney");
	addTextToLangTable(LangPtTable, "", "(GMT+11:00) Magadã, Ilhas Salomão, Nova Caledônia");
	addTextToLangTable(LangPtTable, "", "(GMT+12:00) Fiji, Kamchatka, Auckland");
	addTextToLangTable(LangPtTable, "", "(GMT+13:00) Nuku'alofa");
	addTextToLangTable(LangPtTable, "[\x01OSF\x02 \\_]", "[\x01""BRD\x02 \\_]");
	addTextToLangTable(LangPtTable, "[\x01OSR\x02_/ ]", "[\x01""BRD\x02_/ ]");
	addTextToLangTable(LangPtTable, "[END]", "[FIM]");
	addTextToLangTable(LangPtTable, "", "\nDiagrama Ladder:\n\n");
	addTextToLangTable(LangPtTable, "", "{%s BIT:%d}");
	addTextToLangTable(LangPtTable, "", "{%s MOV}");
	addTextToLangTable(LangPtTable, "", "{\x01""CTC\x02 0:%d}");
	addTextToLangTable(LangPtTable, "", "{\x01SHIFT REG\x02   }");
	addTextToLangTable(LangPtTable, "", "{ACELERACAO}");
	addTextToLangTable(LangPtTable, "{CHECK %s:%d}", "{CHECAR %s:%d}");
	addTextToLangTable(LangPtTable, "", "{DESACELERACAO}");
	addTextToLangTable(LangPtTable, "{MASTER RLY}", "{CHAVE GERAL}");
	addTextToLangTable(LangPtTable, "", "{PERSIST}");
	addTextToLangTable(LangPtTable, "{PWM %.1f kHz}", "{PWM %.1f kHz}");
	addTextToLangTable(LangPtTable, "{PWM %.2f kHz}", "{PWM %.2f kHz}");
	addTextToLangTable(LangPtTable, "{PWM %d Hz}", "{PWM %d Hz}");
	addTextToLangTable(LangPtTable, "", "{PWM %d kHz}");
	addTextToLangTable(LangPtTable, "{READ ADC %s }", "{LER A/D %s }");
	addTextToLangTable(LangPtTable, "", "{READ ENC}");
	addTextToLangTable(LangPtTable, "", "{READ MB 485}");
	addTextToLangTable(LangPtTable, "", "{READ MB ETH}");
	addTextToLangTable(LangPtTable, "", "{READ USS}");
	addTextToLangTable(LangPtTable, "", "{RES}");
	addTextToLangTable(LangPtTable, "", "{RESET ENC}");
	addTextToLangTable(LangPtTable, "", "{SET DA}");
	addTextToLangTable(LangPtTable, "", "{UART RECV}");
	addTextToLangTable(LangPtTable, "", "{UART SEND}");
	addTextToLangTable(LangPtTable, "", "{WRITE MB 485}");
	addTextToLangTable(LangPtTable, "", "{WRITE MB ETH}");
	addTextToLangTable(LangPtTable, "", "{WRITE USS}");
	addTextToLangTable(LangPtTable, "", "Índice");
	addTextToLangTable(LangPtTable, "", "0ZSET%d");
	addTextToLangTable(LangPtTable, "", "16 bits");
	addTextToLangTable(LangPtTable, "", "32 bits");
	addTextToLangTable(LangPtTable, "7-Even-1", "7-Par-1");
	addTextToLangTable(LangPtTable, "7-None-1", "7-Nenhum-1");
	addTextToLangTable(LangPtTable, "7-Odd-1", "7-Ímpar-1");
	addTextToLangTable(LangPtTable, "8-Even-1", "8-Par-1");
	addTextToLangTable(LangPtTable, "8-None-1", "8-Nenhum-1");
	addTextToLangTable(LangPtTable, "8-Odd-1", "8-Ímpar-1");
	addTextToLangTable(LangPtTable, "", "A compilação retornou erro. O código do erro é %d. O arquivo com o log do erro esta na pasta \"C:\\Users\\<User>\\AppData\\Temp\\POPTools\\output.log\"\n");
	addTextToLangTable(LangPtTable, "", "A Data/Hora do relógio da POP não foi atualizada.\n\nNão foi possível verificar se a data/hora foi atualizada corretamente por que a leitura do RTC retornou 0 bytes !.\n\nAplicações que dependem do relogio RTC da placa talvez não funcionem corretamente.");
	addTextToLangTable(LangPtTable, "", "Abril");
	addTextToLangTable(LangPtTable, "", "Aceleração");
	addTextToLangTable(LangPtTable, "", "ADD\x02");
	addTextToLangTable(LangPtTable, "", "Agosto");
	addTextToLangTable(LangPtTable, "", "Ao cancelar:");
	addTextToLangTable(LangPtTable, "", "Arquivo gerado com sucesso!");
	addTextToLangTable(LangPtTable, "", "Arquivos de Texto (*.txt)\0*.txt\0Todos os Arquivos\0*\0\0");
	addTextToLangTable(LangPtTable, "", "Atualizando o relógio RTC da POP...");
	addTextToLangTable(LangPtTable, "", "Avançar");
	addTextToLangTable(LangPtTable, "", "Aviso");
	addTextToLangTable(LangPtTable, "", "Aviso: Este projeto não pode ser aberto porque foi gravado com uma versão mais nova do programa POPTools !");
	addTextToLangTable(LangPtTable, "", "Aviso: O arquivo deste projeto é de uma versão anterior e será atualizado para a versão atual quando for gravado !");
	addTextToLangTable(LangPtTable, "", "Avisos durante a simulação");
	addTextToLangTable(LangPtTable, "", "Bit:");
	addTextToLangTable(LangPtTable, "", "char");
	addTextToLangTable(LangPtTable, "", "Comando inválido durante a gravação do programa !");
	addTextToLangTable(LangPtTable, "", "Comando inválido enviado ao apagar a memória flash !");
	addTextToLangTable(LangPtTable, "", "Compilado com sucesso. O arquivo binário foi criado em '%s'.\r\n\r\n");
	addTextToLangTable(LangPtTable, "", "Compilando... aguarde !");
	addTextToLangTable(LangPtTable, "", "Conexão cancelada !");
	addTextToLangTable(LangPtTable, "", "Configurações");
	addTextToLangTable(LangPtTable, "", "Confirmar alteração de Entrada para Relé Interno");
	addTextToLangTable(LangPtTable, "", "Confirmar alteração de Entrada para Saída");
	addTextToLangTable(LangPtTable, "", "Confirmar alteração de Rele Interno para Saída");
	addTextToLangTable(LangPtTable, "", "Confirmar alteração de Saída para Rele Interno");
	addTextToLangTable(LangPtTable, "", "Conflito entre tipos! Operação não permitida.");
	addTextToLangTable(LangPtTable, "", "Connection closed");
	addTextToLangTable(LangPtTable, "", "Could not load splash image!");
	addTextToLangTable(LangPtTable, "", "CTD");
	addTextToLangTable(LangPtTable, "", "CTU");
	addTextToLangTable(LangPtTable, "", "Curva");
	addTextToLangTable(LangPtTable, "", "Curva de Ganho");
	addTextToLangTable(LangPtTable, "", "Data inválida.");
	addTextToLangTable(LangPtTable, "", "Data/Paridade/Stop:");
	addTextToLangTable(LangPtTable, "", "Desaceleração");
	addTextToLangTable(LangPtTable, "", "Desligado");
	addTextToLangTable(LangPtTable, "", "Desligar");
	addTextToLangTable(LangPtTable, "", "dest");
	addTextToLangTable(LangPtTable, "", "Destino");
	addTextToLangTable(LangPtTable, "", "Dezembro");
	addTextToLangTable(LangPtTable, "", "Dia da Semana");
	addTextToLangTable(LangPtTable, "", "Dia do Mês");
	addTextToLangTable(LangPtTable, "", "Diametro Roda:");
	addTextToLangTable(LangPtTable, "", "Dias");
	addTextToLangTable(LangPtTable, "", "Direção do Movimento");
	addTextToLangTable(LangPtTable, "", "DIV\x02");
	addTextToLangTable(LangPtTable, "", "Divisão por zero na variavel: '%s', a simulação será interrompida.");
	addTextToLangTable(LangPtTable, "", "DNS");
	addTextToLangTable(LangPtTable, "", "DNS:");
	addTextToLangTable(LangPtTable, "", "DSTQQSS");
	addTextToLangTable(LangPtTable, "", "duty_cycle");
	addTextToLangTable(LangPtTable, "", "Endereço IP:");
	addTextToLangTable(LangPtTable, "", "Endereço:");
	addTextToLangTable(LangPtTable, "", "entrada encoder");
	addTextToLangTable(LangPtTable, "", "Enviado comando inválido (conectando) !");
	addTextToLangTable(LangPtTable, "", "Enviado comando inválido (verificando) !");
	addTextToLangTable(LangPtTable, "", "ERRO");
	addTextToLangTable(LangPtTable, "", "Erro abrindo porta serial!");
	addTextToLangTable(LangPtTable, "", "Erro ao abrir o arquivo de programa (.hex) !");
	addTextToLangTable(LangPtTable, "", "Erro ao conectar na porta COM%d !");
	addTextToLangTable(LangPtTable, "", "Erro ao gerar checksum durante a gravação do programa !");
	addTextToLangTable(LangPtTable, "", "Erro ao preencher a memória flash !");
	addTextToLangTable(LangPtTable, "", "Erro de checksum ao gravar o programa !");
	addTextToLangTable(LangPtTable, "", "Erro de checksum no arquivo de programa (.hex) !");
	addTextToLangTable(LangPtTable, "", "Erro durante a gravação do programa !");
	addTextToLangTable(LangPtTable, "", "Erro na compilacao !!!");
	addTextToLangTable(LangPtTable, "", "Erro na execução do módulo JIT !");
	addTextToLangTable(LangPtTable, "", "Erro na verificação !");
	addTextToLangTable(LangPtTable, "", "Escrever");
	addTextToLangTable(LangPtTable, "", "escrita modbus");
	addTextToLangTable(LangPtTable, "", "escrita modbus eth");
	addTextToLangTable(LangPtTable, "", "escrita NS600");
	addTextToLangTable(LangPtTable, "", "Estágios");
	addTextToLangTable(LangPtTable, "", "Executar");
	addTextToLangTable(LangPtTable, "", "Fator Correção:");
	addTextToLangTable(LangPtTable, "", "Fator Multiplicação:");
	addTextToLangTable(LangPtTable, "", "Fevereiro");
	addTextToLangTable(LangPtTable, "", "Flag Interna");
	addTextToLangTable(LangPtTable, "", "Frequência");
	addTextToLangTable(LangPtTable, "", "Função");
	addTextToLangTable(LangPtTable, "", "Fuso Horário:");
	addTextToLangTable(LangPtTable, "", "Gateway:");
	addTextToLangTable(LangPtTable, "", "Gravando... %d%% concluído !");
	addTextToLangTable(LangPtTable, "", "Gravação concluída com sucesso");
	addTextToLangTable(LangPtTable, "", "Gravação concluída com sucesso !");
	addTextToLangTable(LangPtTable, "", "Gravação do programa cancelada !");
	addTextToLangTable(LangPtTable, "", "GW");
	addTextToLangTable(LangPtTable, "", "Hora invalida, deve estar entre 0 e 23.");
	addTextToLangTable(LangPtTable, "", "Horário de verão");
	addTextToLangTable(LangPtTable, "", "ID");
	addTextToLangTable(LangPtTable, "", "ID deve ser maior ou igual a zero!");
	addTextToLangTable(LangPtTable, "", "ID:");
	addTextToLangTable(LangPtTable, "", "Impossível criar paralelo entre os pontos selecionados!");
	addTextToLangTable(LangPtTable, "in", "entrada");
	addTextToLangTable(LangPtTable, "", "index");
	addTextToLangTable(LangPtTable, "", "Indice");
	addTextToLangTable(LangPtTable, "", "Indice:");
	addTextToLangTable(LangPtTable, "", "Intel Hex Files (*.hex)\0*.hex\0All files\0*\0\0");
	addTextToLangTable(LangPtTable, "", "Interface");
	addTextToLangTable(LangPtTable, "", "IP");
	addTextToLangTable(LangPtTable, "", "IP:");
	addTextToLangTable(LangPtTable, "", "Janeiro");
	addTextToLangTable(LangPtTable, "", "Já existe um Rele Interno com este nome. Alterar para Saída?");
	addTextToLangTable(LangPtTable, "", "Já existe uma Entrada com este nome. Alterar para Relé Interno?");
	addTextToLangTable(LangPtTable, "", "Já existe uma Entrada com este nome. Alterar para Saída?");
	addTextToLangTable(LangPtTable, "", "Já existe uma Saída com este nome. Alterar para Rele Interno?");
	addTextToLangTable(LangPtTable, "", "Julho");
	addTextToLangTable(LangPtTable, "", "Junho");
	addTextToLangTable(LangPtTable, "", "leitura modbus");
	addTextToLangTable(LangPtTable, "", "leitura modbus eth");
	addTextToLangTable(LangPtTable, "", "leitura NS600");
	addTextToLangTable(LangPtTable, "", "Ler");
	addTextToLangTable(LangPtTable, "", "Ler Parâmetro por USS");
	addTextToLangTable(LangPtTable, "", "Ligado");
	addTextToLangTable(LangPtTable, "", "Ligar");
	addTextToLangTable(LangPtTable, "", "Limpar Registro");
	addTextToLangTable(LangPtTable, "", "Limpar!");
	addTextToLangTable(LangPtTable, "", "Limpeza da memória flash cancelada !");
	addTextToLangTable(LangPtTable, "", "Limpeza da memória flash não suportado !");
	addTextToLangTable(LangPtTable, "", "Linear");
	addTextToLangTable(LangPtTable, "", "Linguagem C (*.c)\0*.c\0Todos os Arquivos\0*\0\0");
	addTextToLangTable(LangPtTable, "", "Localizar");
	addTextToLangTable(LangPtTable, "", "Localizar e Substituir");
	addTextToLangTable(LangPtTable, "", "Localizar:");
	addTextToLangTable(LangPtTable, "", "LUT");
	addTextToLangTable(LangPtTable, "", "Maio");
	addTextToLangTable(LangPtTable, "", "Março");
	addTextToLangTable(LangPtTable, "", "Mascara:");
	addTextToLangTable(LangPtTable, "", "MASK");
	addTextToLangTable(LangPtTable, "", "Minuto invalido, deve estar entre 0 e 59.");
	addTextToLangTable(LangPtTable, "", "Modbus");
	addTextToLangTable(LangPtTable, "", "ModBUS ID:");
	addTextToLangTable(LangPtTable, "", "MODBUS: id=%d, address=%d, name=%s\r\n");
	addTextToLangTable(LangPtTable, "", "MODBUS_ETH: id=%d, address=%d, name=%s\r\n");
	addTextToLangTable(LangPtTable, "", "Modelo do CLP:");
	addTextToLangTable(LangPtTable, "", "Modo de Escrita");
	addTextToLangTable(LangPtTable, "", "MUL\x02");
	addTextToLangTable(LangPtTable, "", "Número '%s' inválido!");
	addTextToLangTable(LangPtTable, "", "Número Pulsos:");
	addTextToLangTable(LangPtTable, "", "Nao encontrado!");
	addTextToLangTable(LangPtTable, "new", "novo");
	addTextToLangTable(LangPtTable, "", "No Encoder or Encoder not supported for selected micro.");
	addTextToLangTable(LangPtTable, "", "Nome");
	addTextToLangTable(LangPtTable, "", "Nome '%s' reservado para uso interno, favor escolher outro nome.");
	addTextToLangTable(LangPtTable, "", "Nome Inválido! Para o tipo 'Flag Interna' é obrigatório selecionar um item da lista.");
	addTextToLangTable(LangPtTable, "", "Não");
	addTextToLangTable(LangPtTable, "", "Não foi possível abrir o arquivo .hex ao apagar a memória flash !");
	addTextToLangTable(LangPtTable, "", "Não foi possível alocar memória durante a gravação do programa !");
	addTextToLangTable(LangPtTable, "", "Não foi possível conectar com baudrate %i !");
	addTextToLangTable(LangPtTable, "", "Não foi possível conectar para apagar a memória flash !");
	addTextToLangTable(LangPtTable, "", "Não foi possível conectar para gravar o programa !");
	addTextToLangTable(LangPtTable, "", "Não suporta gravação do programa !");
	addTextToLangTable(LangPtTable, "", "Não suporta verificação !");
	addTextToLangTable(LangPtTable, "", "Novembro");
	addTextToLangTable(LangPtTable, "", "Novo Valor");
	addTextToLangTable(LangPtTable, "", "O valor máximo permitido para o campo Resolução (%%) da Curva de Ganho é %s.");
	addTextToLangTable(LangPtTable, "", "O valor máximo permitido para o campo Tempo (%%) da Curva de Ganho é %d.");
	addTextToLangTable(LangPtTable, "", "O valor permitido para o campo Resolução DA no Tamanho da Rampa esta entre %d e %d.");
	addTextToLangTable(LangPtTable, "", "O valor permitido para o campo Tempo (ms) no Tamanho da Rampa esta entre %d e %d.");
	addTextToLangTable(LangPtTable, "", "Ocorreu um erro ao desenhar o gráfico do D/A.");
	addTextToLangTable(LangPtTable, "", "Ocorreu um erro desconhecido ao apagar a memória flash !");
	addTextToLangTable(LangPtTable, "", "Ocorreu um erro desconhecido ao conectar !");
	addTextToLangTable(LangPtTable, "", "Ocorreu um erro desconhecido ao desconectar !");
	addTextToLangTable(LangPtTable, "", "Ocorreu um erro desconhecido ao gravar o programa !");
	addTextToLangTable(LangPtTable, "", "Ocorreu um erro desconhecido ao verificar a gravação do programa !");
	addTextToLangTable(LangPtTable, "", "OFF");
	addTextToLangTable(LangPtTable, "", "ON");
	addTextToLangTable(LangPtTable, "", "Operação");
	addTextToLangTable(LangPtTable, "", "Operação bit");
	addTextToLangTable(LangPtTable, "", "Origem");
	addTextToLangTable(LangPtTable, "", "Origem:");
	addTextToLangTable(LangPtTable, "out", "saida");
	addTextToLangTable(LangPtTable, "", "Outubro");
	addTextToLangTable(LangPtTable, "", "Para '%s', cristal de %.6f MHz, tempo de ciclo de %.1f ms\n\n");
	addTextToLangTable(LangPtTable, "", "Parametro:");
	addTextToLangTable(LangPtTable, "", "Parametros de conexão inválidos !");
	addTextToLangTable(LangPtTable, "", "Parametros inválidos ao apagar a memória flash !");
	addTextToLangTable(LangPtTable, "", "Parâmetro");
	addTextToLangTable(LangPtTable, "", "POP-7 não encontrada!");
	addTextToLangTable(LangPtTable, "", "POPTools - Texto exportado\n");
	addTextToLangTable(LangPtTable, "", "POPTools !");
	addTextToLangTable(LangPtTable, "", "POPTools iniciado");
	addTextToLangTable(LangPtTable, "", "POPTools Projeto Ladder (*.ld)\0*.ld\0All files\0*\0\0");
	addTextToLangTable(LangPtTable, "", "Porta de Depuração:");
	addTextToLangTable(LangPtTable, "", "Porta de Gravação:");
	addTextToLangTable(LangPtTable, "", "Posicionamento");
	addTextToLangTable(LangPtTable, "", "Preferências");
	addTextToLangTable(LangPtTable, "", "Preparando para gravar... %d%% concluído !");
	addTextToLangTable(LangPtTable, "", "Preparação concluída com sucesso !");
	addTextToLangTable(LangPtTable, "", "Projetos Recentes:");
	addTextToLangTable(LangPtTable, "", "PWL");
	addTextToLangTable(LangPtTable, "", "RAMPA");
	addTextToLangTable(LangPtTable, "", "Rampa de Aceleração/Desaceleração");
	addTextToLangTable(LangPtTable, "", "READ");
	addTextToLangTable(LangPtTable, "", "Read A/D Converter");
	addTextToLangTable(LangPtTable, "Read Encoder", "Ler do Encoder");
	addTextToLangTable(LangPtTable, "Write Encoder", "Escrever no Encoder");
	addTextToLangTable(LangPtTable, "", "read USS");
	addTextToLangTable(LangPtTable, "", "Recuar");
	addTextToLangTable(LangPtTable, "", "Rede");
	addTextToLangTable(LangPtTable, "", "reg");
	addTextToLangTable(LangPtTable, "", "Registrador");
	addTextToLangTable(LangPtTable, "", "Registrador deve ser entre 0 e 31!");
	addTextToLangTable(LangPtTable, "", "Registrador:");
	addTextToLangTable(LangPtTable, "", "Registro");
	addTextToLangTable(LangPtTable, "", "Relógio da POP");
	addTextToLangTable(LangPtTable, "", "Reset");
	addTextToLangTable(LangPtTable, "", "reset encoder");
	addTextToLangTable(LangPtTable, "", "Resolução DA (%):");
	addTextToLangTable(LangPtTable, "", "Resolução DA (%)[-100 ~ 100]");
	addTextToLangTable(LangPtTable, "", "Resolução DA (%)[0 ~ 100]");
	addTextToLangTable(LangPtTable, "", "Resolução DA (12 bits)[-2048 ~ 2047]");
	addTextToLangTable(LangPtTable, "", "Resolução DA (12 bits)[2047 ~ -2048]");
	addTextToLangTable(LangPtTable, "", "Resolução DA (mV)[-10000 ~ 10000]");
	addTextToLangTable(LangPtTable, "", "Resolução DA (mV)[10000 ~ -10000]");
	addTextToLangTable(LangPtTable, "", "Resposta");
	addTextToLangTable(LangPtTable, "", "Retransmitir");
	addTextToLangTable(LangPtTable, "", "Retransmitir Pacote");
	addTextToLangTable(LangPtTable, "", "RS485 Baud Rate (bps):");
	addTextToLangTable(LangPtTable, "", "RST");
	addTextToLangTable(LangPtTable, "", "RTC");
	addTextToLangTable(LangPtTable, "", "RTO");
	addTextToLangTable(LangPtTable, "", "RX NS600");
	addTextToLangTable(LangPtTable, "", "Sair");
	addTextToLangTable(LangPtTable, "", "Salvar como linguagem C");
	addTextToLangTable(LangPtTable, "", "saved");
	addTextToLangTable(LangPtTable, "", "Saída em uso! Não é possível alterar para Entrada.");
	addTextToLangTable(LangPtTable, "", "Segundo invalido, deve estar entre 0 e 59.");
	addTextToLangTable(LangPtTable, "", "Serial");
	addTextToLangTable(LangPtTable, "", "Servidor de Tempo:");
	addTextToLangTable(LangPtTable, "", "Servo Yaskawa");
	addTextToLangTable(LangPtTable, "", "SET");
	addTextToLangTable(LangPtTable, "", "Set Bit");
	addTextToLangTable(LangPtTable, "", "Set D/A");
	addTextToLangTable(LangPtTable, "", "Set de Parametro:");
	addTextToLangTable(LangPtTable, "", "Set de Parâmetro");
	addTextToLangTable(LangPtTable, "", "Setembro");
	addTextToLangTable(LangPtTable, "", "Sim");
	addTextToLangTable(LangPtTable, "", "Sobre...");
	addTextToLangTable(LangPtTable, "", "src");
	addTextToLangTable(LangPtTable, "", "SUB\x02");
	addTextToLangTable(LangPtTable, "", "Substituir");
	addTextToLangTable(LangPtTable, "", "Substituir por");
	addTextToLangTable(LangPtTable, "", "Substituir por:");
	addTextToLangTable(LangPtTable, "", "Substituir Todos");
	addTextToLangTable(LangPtTable, "", "Sucesso");
	addTextToLangTable(LangPtTable, "", "Tamanho da Rampa");
	addTextToLangTable(LangPtTable, "", "Tempo");
	addTextToLangTable(LangPtTable, "", "Tempo (%):");
	addTextToLangTable(LangPtTable, "", "Tempo (ms):");
	addTextToLangTable(LangPtTable, "", "Tipo de arquivo deve ser .hex\nA extensão será alterada automaticamente.");
	addTextToLangTable(LangPtTable, "", "Tipo de Rampa");
	addTextToLangTable(LangPtTable, "", "Todos");
	addTextToLangTable(LangPtTable, "", "TOF");
	addTextToLangTable(LangPtTable, "", "TON");
	addTextToLangTable(LangPtTable, "", "TX NS600");
	addTextToLangTable(LangPtTable, "", "Unable to connect to server!");
	addTextToLangTable(LangPtTable, "", "USS: id=%d, param=%d, index=%d, name=%s, value=%d\r\n");
	addTextToLangTable(LangPtTable, "", "Valor");
	addTextToLangTable(LangPtTable, "", "Valor inválido no campo Resolução (%) !");
	addTextToLangTable(LangPtTable, "", "Valor inválido no campo Resolução DA !");
	addTextToLangTable(LangPtTable, "", "Valor inválido no campo Tempo (%) !");
	addTextToLangTable(LangPtTable, "", "Valor inválido no campo Tempo (ms) !");
	addTextToLangTable(LangPtTable, "", "Valor inválido! Conflito de tipos: Entrada <-> Saída");
	addTextToLangTable(LangPtTable, "", "Valor inválido! Conflito de tipos: Rele Interno <-> Entrada");
	addTextToLangTable(LangPtTable, "", "Valor inválido! Conflito de tipos: Rele Interno <-> Saída");
	addTextToLangTable(LangPtTable, "", "Valor:");
	addTextToLangTable(LangPtTable, "", "value: %d\\r\\n");
	addTextToLangTable(LangPtTable, "", "var");
	addTextToLangTable(LangPtTable, "", "Variação Velocidade");
	addTextToLangTable(LangPtTable, "", "Variavel:");
	addTextToLangTable(LangPtTable, "", "Variável");
	addTextToLangTable(LangPtTable, "", "Verificando... %d%% concluído !");
	addTextToLangTable(LangPtTable, "", "Verificação concluída com sucesso !");
	addTextToLangTable(LangPtTable, "", "WRITE");
	addTextToLangTable(LangPtTable, "", "write USS");
	addTextToLangTable(LangPtTable, "", "x 2");
	addTextToLangTable(LangPtTable, "", "x 4");
	addTextToLangTable(LangPtTable, "", "xvar");
	addTextToLangTable(LangPtTable, "", "yvar");
	addTextToLangTable(LangPtTable, "Operator 1", "Operador 1");
	addTextToLangTable(LangPtTable, "Operator 2", "Operador 2");
	addTextToLangTable(LangPtTable, "Square Root", "Raiz Quadrada");
	addTextToLangTable(LangPtTable, "start series [", "iniciando serie [");
	addTextToLangTable(LangPtTable, "SMTWTFS", "DSTQQSS");
	addTextToLangTable(LangPtTable, "Debug", "Depurar");
	addTextToLangTable(LangPtTable, "Default", "Padrão");
	addTextToLangTable(LangPtTable, "Leave", "Manter");
	addTextToLangTable(LangPtTable, "Stop", "Parar");
	addTextToLangTable(LangPtTable, "Decelerate", "Desacelerar");
	addTextToLangTable(LangPtTable, "Mode Fixed", "Data Específica");
	addTextToLangTable(LangPtTable, "{\x01SHIFT REG\x02   }", "{\x01 Fila de Variáveis\x02}");
	addTextToLangTable(LangPtTable, "Write ModBUS", "Escrever Registrador do ModBUS");
	addTextToLangTable(LangPtTable, "Read ModBUS", "Ler Registrador do ModBUS");
	addTextToLangTable(LangPtTable, "Write Servo Yaskawa", "Escrever no Servo Yaskawa");
	addTextToLangTable(LangPtTable, "Read Servo Yaskawa", "Ler do Servo Yaskawa");
	addTextToLangTable(LangPtTable, "Progress", "Progresso");
	addTextToLangTable(LangPtTable, "Scheduler", "Agendador de Tarefa");
	addTextToLangTable(LangPtTable, "Yes", "Sim");
	addTextToLangTable(LangPtTable, "No", "Não");

	// Idioma Espanhol
	LangEsTable = newLangTableChar();

	addTextToLangTable(LangEsTable, "Target frequency %d Hz, closest achievable is %d Hz (warning, >5%% error).", "Frecuencia Micro %d Hz, la mejor aproximación es %d Hz (aviso, >5%% error).");
	addTextToLangTable(LangEsTable, "Compile successful; wrote IHEX for AVR to '%s'.\r\n\r\nRemember to set the processor configuration (fuses) correctly. This does not happen automatically.", "Compilación correcta; se escribió IHEX para AVR en '%s'.\r\n\r\nRecuerde marcar la configuración (fuses) del micro correctamente. Esto NO se hace automaticamente.");
	addTextToLangTable(LangEsTable, "( ) Normal", "( ) Normal");
	addTextToLangTable(LangEsTable, "(/) Negated", "(/) Negado");
	addTextToLangTable(LangEsTable, "(S) Set-Only", "(S) Activar");
	addTextToLangTable(LangEsTable, "(R) Reset-Only", "(R) Desactivar");
	addTextToLangTable(LangEsTable, "Pin on MCU", "Pata del Micro");
	addTextToLangTable(LangEsTable, "Coil", "Bobina");
	addTextToLangTable(LangEsTable, "Comment", "Comentario");
	addTextToLangTable(LangEsTable, "Cycle Time (ms):", "Tiempo Ciclo (ms):");
	addTextToLangTable(LangEsTable, "Crystal Frequency (MHz):", "Frecuencia Cristal (MHz):");
	addTextToLangTable(LangEsTable, "UART Baud Rate (bps):", "Baudios UART (bps):");
	addTextToLangTable(LangEsTable, "Serie (UART) will use pins %d and %d.\r\n\r\n", "Puerto Serie (UART) usará las patas %d y %d.\r\n\r\n");
	addTextToLangTable(LangEsTable, "Please select a micro with a UART.\r\n\r\n", "Por favor. Seleccione un micro con UART.\r\n\r\n");
	addTextToLangTable(LangEsTable, "No serial instructions (UART Send/UART Receive) are in use; add one to program before setting baud rate.\r\n\r\n", "No se han usado instrucciones (UART Enviar/UART Recibir) para el puerto serie aun; Añada una al programa antes de configurar los baudios.\r\n\r\n");
	addTextToLangTable(LangEsTable, "The cycle time for the 'PLC' runtime generated by LDmicro is user-configurable. Very short cycle times may not be achievable due to processor speed constraints, and very long cycle times may not be achievable due to hardware overflows. Cycle times between 10 ms and 100 ms will usually be practical.\r\n\r\nThe compiler must know what speed crystal you are using with the micro to convert between timing in clock cycles and timing in seconds. A 4 MHz to 20 MHz crystal is typical; check the speed grade of the part you are using to determine the maximum allowable clock speed before choosing a crystal.", "El tiempo de ciclo de ejecución para el 'PLC' es configurable. Un tiempo de ciclo muy corto puede no funcionar debido a la baja velocidad del micro, y un tiempo de ciclo muy largo puede no funcionar por limitaciones del temporizador del micro. Ciclos de tiempo entre 10 y 100 ms suele ser lo normal.\r\n\r\nEl compilador debe conocer la velocidad del cristal que estas usando para poder convertir entre tiempo en ciclos de reloj y tiempo en segundos. Un cristal entre 4 Mhz y 20 Mhz es lo típico; Comprueba la velocidad a la que puede funcionar tu micro y calcula la velocidad máxima del reloj antes de elegir el cristal.");
	addTextToLangTable(LangEsTable, "PLC Configuration", "Configuración PLC");
	addTextToLangTable(LangEsTable, "Zero cycle time not valid; resetting to 10 ms.", "No es valido un tiempo de ciclo 0; forzado a 10 ms.");
	addTextToLangTable(LangEsTable, "Source", "Fuente");
	addTextToLangTable(LangEsTable, "Internal Relay", "Rele Interno");
	addTextToLangTable(LangEsTable, "Input pin", "Pata Entrada");
	addTextToLangTable(LangEsTable, "Output pin", "Pata Salida");
	addTextToLangTable(LangEsTable, "|/| Negated", "|/| Negado");
	addTextToLangTable(LangEsTable, "Contacts", "Contacto");
	addTextToLangTable(LangEsTable, "No ADC or ADC not supported for selected micro.", "El micro seleccionado no tiene ADC o no esta soportado.");
	addTextToLangTable(LangEsTable, "Assign:", "Asignar:");
	addTextToLangTable(LangEsTable, "No microcontroller has been selected. You must select a microcontroller before you can assign I/O pins.\r\n\r\nSelect a microcontroller under the Settings menu and try again.", "No se ha seleccionado micro. Debes seleccionar un micro antes de asignar patas E/S.\r\n\r\nElije un micro en el menu de configuración y prueba otra vez.");
	addTextToLangTable(LangEsTable, "I/O Pin Assignment", "Asignación de pata E/S");
	addTextToLangTable(LangEsTable, "Can't specify I/O assignment for ANSI C target; compile and see comments in generated source code.", "No se puede asignar la E/S especificadas para el ANSI C generado; compile y vea los comentarios generados en el código fuente.");
	addTextToLangTable(LangEsTable, "Can't specify I/O assignment for interpretable target; see comments in reference implementation of interpreter.", "No se puede asignar la E/S especificadas para el código generado para el interprete; vea los comentarios en la implementación del interprete.");
	addTextToLangTable(LangEsTable, "Can only assign pin number to input/output pins or general variable.", "Solo puede asignar numero de pata a las patas de Entrada/Salida.");
	addTextToLangTable(LangEsTable, "No ADC or ADC not supported for this micro.", "Este micro no tiene ADC o no esta soportado.");
	addTextToLangTable(LangEsTable, "Rename I/O from default name ('%s') before assigning MCU pin.", "Cambie el nombre por defecto ('%s') antes de asignarle una pata del micro.");
	addTextToLangTable(LangEsTable, "I/O Pin", "E/S Pata");
	addTextToLangTable(LangEsTable, "(no pin)", "(falta pata)");
	addTextToLangTable(LangEsTable, "<UART needs!>", "<Se necesita UART!>");
	addTextToLangTable(LangEsTable, "<PWM needs!>", "<Se necesita PWM!>");
	addTextToLangTable(LangEsTable, "<not an I/O!>", "<No es una E/S!>");
	addTextToLangTable(LangEsTable, "Export As Text", "Exportar como Texto");
	addTextToLangTable(LangEsTable, "Couldn't write to '%s'.", "No puedo escribir en '%s'.");
	addTextToLangTable(LangEsTable, "Compile To", "Compilar");
	addTextToLangTable(LangEsTable, "Must choose a target microcontroller before compiling.", "Debe elegir un micro antes de compilar.");
	addTextToLangTable(LangEsTable, "UART function used but not supported for this micro.", "Usadas Funciones para UART. Este micro no las soporta.");
	addTextToLangTable(LangEsTable, "PWM function used but not supported for this micro.", "Usadas Funciones para PWM. Este micro no las soporta.");
	addTextToLangTable(LangEsTable, "The program has changed since it was last saved.\r\n\r\nDo you want to save the changes?", "El programa ha cambiado desde la última vez que los guardo.\r\n\r\n¿Quieres guardar los cambios?");
	addTextToLangTable(LangEsTable, "--add comment here--", "--añade el comentario aquí--");
	addTextToLangTable(LangEsTable, "Start new program?", "¿Empezar un nuevo programa?");
	addTextToLangTable(LangEsTable, "Couldn't open '%s'.", "No puedo abrir '%s'.");
	addTextToLangTable(LangEsTable, "Name", "Nombre");
	addTextToLangTable(LangEsTable, "State", "Estado");
	addTextToLangTable(LangEsTable, "Pin on Processor", "Pata del Micro");
	addTextToLangTable(LangEsTable, "MCU Port", "Puerto del Micro");
	addTextToLangTable(LangEsTable, "POPTools - Simulation (Running)", "POPTools - Simulación (Ejecutando)");
	addTextToLangTable(LangEsTable, "POPTools - Simulation (Stopped)", "POPTools - Simulación (Parada)");
	addTextToLangTable(LangEsTable, "POPTools - Program Editor", "POPTools  Editor de Programa");
	addTextToLangTable(LangEsTable, " - (not yet saved)", " - (no guardado aún)");
	addTextToLangTable(LangEsTable, "&New\tCtrl+N", "&Nuevo\tCtrl+N");
	addTextToLangTable(LangEsTable, "&Open...\tCtrl+O", "&Abrir...\tCtrl+O");
	addTextToLangTable(LangEsTable, "&Save\tCtrl+S", "&Guardar\tCtrl+S");
	addTextToLangTable(LangEsTable, "Save &As...", "Guardar &Como...");
	addTextToLangTable(LangEsTable, "&Export As Text...\tCtrl+E", "&Exportar a Texto...\tCtrl+E");
	addTextToLangTable(LangEsTable, "E&xit", "&Salir");
	addTextToLangTable(LangEsTable, "&Undo\tCtrl+Z", "&Deshacer\tCtrl+Z");
	addTextToLangTable(LangEsTable, "&Redo\tCtrl+Y", "&Rehacer\tCtrl+Y");
	addTextToLangTable(LangEsTable, "Insert Rung &Before\tShift+INS", "Insertar Línea (Rung) &Antes\tShift+INS");
	addTextToLangTable(LangEsTable, "Insert Rung &After\tINS", "Insertar Línea (Rung) &Despues\tINS");
	addTextToLangTable(LangEsTable, "Move Selected Rung &Up\tShift+Up", "Subir Línea (Rung) Seleccionada\tShift+Up");
	addTextToLangTable(LangEsTable, "Move Selected Rung &Down\tShift+Down", "Bajar Línea (Rung) Seleccionada\tShift+Down");
	addTextToLangTable(LangEsTable, "&Delete Selected Element\tDel", "&Borrar Elemento Seleccionado\tSupr");
	addTextToLangTable(LangEsTable, "D&elete Rung\tShift+Del", "B&orrar Línea (Rung) Seleccionada\tShift+Supr");
	addTextToLangTable(LangEsTable, "Insert Co&mment\tF2", "Insertar Co&mentario\tF2");
	addTextToLangTable(LangEsTable, "Insert &Contacts\tC", "Insertar &Contacto\tC");
	addTextToLangTable(LangEsTable, "Insert OSR (One Shot Rising)\t/", "Insertar OSR (Flanco de Subida)\t/");
	addTextToLangTable(LangEsTable, "Insert OSF (One Shot Falling)\t\\", "Insertar OSF (Flanco de Bajada)\t\\");
	addTextToLangTable(LangEsTable, "Insert T&ON (Delayed Turn On)\tO", "Insertar T&ON (Encendido Retardado)\tO");
	addTextToLangTable(LangEsTable, "Insert TO&F (Delayed Turn Off)\tF", "Insertar TO&F (Apagado Retardado)\tF");
	addTextToLangTable(LangEsTable, "Insert R&TO (Retentive Delayed Turn On)\tT", "Insertar R&TO (Encendido Retardado con Memoria)\tT");
	addTextToLangTable(LangEsTable, "Insert CT&U (Count Up)\tI", "Insertar CT&U (Contador Incremental)\tU");
	addTextToLangTable(LangEsTable, "Insert CT&D (Count Down)\tU", "Insertar CT&D (Contador Decremental)\tI");
	addTextToLangTable(LangEsTable, "Insert CT&C (Count Circular)\tJ", "Insertar CT&C (Contador Circular)\tJ");
	addTextToLangTable(LangEsTable, "Insert EQU (Compare for Equals)\t=", "Insertar EQU (Comparador si Igual)\t=");
	addTextToLangTable(LangEsTable, "Insert NEQ (Compare for Not Equals)\t!", "Insertar NEQ (Comparador si NO Igual)\t!");
	addTextToLangTable(LangEsTable, "Insert GRT (Compare for Greater Than)\t>", "Insertar GRT (Comparador si Mayor que)\t>");
	addTextToLangTable(LangEsTable, "Insert GEQ (Compare for Greater Than or Equal)\t.", "Insertar GEQ (Comparador si Mayor o Igual que)\t.");
	addTextToLangTable(LangEsTable, "Insert LES (Compare for Less Than)\t<", "Insertar LES (Comparador si Menor que)\t<");
	addTextToLangTable(LangEsTable, "Insert LEQ (Compare for Less Than or Equal)\t,", "Insertar LEQ (Comparador si Menor o Igual que)\t,");
	addTextToLangTable(LangEsTable, "Insert Open-Circuit", "Insertar Circuito-Abierto");
	addTextToLangTable(LangEsTable, "Insert Short-Circuit", "Insertar Circuito-Cerrado");
	addTextToLangTable(LangEsTable, "Insert Master Control Relay", "Insertar Rele de Control Maestro");
	addTextToLangTable(LangEsTable, "Insert Coi&l\tL", "Insertar &Bobina\tL");
	addTextToLangTable(LangEsTable, "Insert R&ES (Counter/RTO Reset)\tE", "Insertar R&ES (Contador/RTO Reinicio)\tE");
	addTextToLangTable(LangEsTable, "Insert MOV (Move)\tM", "Insertar MOV (Mover)\tM");
	addTextToLangTable(LangEsTable, "Insert ADD (16-bit Integer Add)\t+", "Insertar ADD (Suma Entero 16-bit)\t+");
	addTextToLangTable(LangEsTable, "Insert SUB (16-bit Integer Subtract)\t-", "Insertar SUB (Resta Entero 16-bit)\t-");
	addTextToLangTable(LangEsTable, "Insert MUL (16-bit Integer Multiply)\t*", "Insertar MUL (Multiplica Entero 16-bit)\t*");
	addTextToLangTable(LangEsTable, "Insert DIV (16-bit Integer Divide)\tD", "Insertar DIV (Divide Entero 16-bit)\tD");
	addTextToLangTable(LangEsTable, "Insert Shift Register", "Insertar Registro de Desplazamiento");
	addTextToLangTable(LangEsTable, "Insert Look-Up Table", "Insertar Tabla de Busqueda");
	addTextToLangTable(LangEsTable, "Insert Piecewise Linear", "Insertar Linealización por Segmentos");
	addTextToLangTable(LangEsTable, "Insert Formatted String Over UART", "Insertar Cadena Formateada en la UART");
	addTextToLangTable(LangEsTable, "Insert &UART Send", "Insertar &UART Enviar");
	addTextToLangTable(LangEsTable, "Insert &UART Receive", "Insertar &UART Recibir");
	addTextToLangTable(LangEsTable, "Insert Set PWM Output", "Insertar Valor Salida PWM");
	addTextToLangTable(LangEsTable, "Insert A/D Converter Read\tP", "Insertar Lectura Conversor A/D\tP");
	addTextToLangTable(LangEsTable, "Insert Make Persistent", "Insertar Hacer Permanente");
	addTextToLangTable(LangEsTable, "Make Norm&al\tA", "Hacer Norm&al\tA");
	addTextToLangTable(LangEsTable, "Make &Negated\tN", "Hacer &Negado\tN");
	addTextToLangTable(LangEsTable, "Make &Set-Only\tS", "Hacer &Solo-Activar\tS");
	addTextToLangTable(LangEsTable, "Make &Reset-Only\tR", "Hace&r Solo-Desactivar\tR");
	addTextToLangTable(LangEsTable, "&MCU Parameters...", "&Parametros del Micro...");
	addTextToLangTable(LangEsTable, "(no microcontroller)", "(no microcontrolador)");
	addTextToLangTable(LangEsTable, "&Microcontroller", "&Microcontrolador");
	addTextToLangTable(LangEsTable, "Si&mulation Mode\tCtrl+M", "Modo Si&mulación \tCtrl+M");
	addTextToLangTable(LangEsTable, "Start &Real-Time Simulation\tCtrl+R", "Empezar Simulación en Tiempo &Real\tCtrl+R");
	addTextToLangTable(LangEsTable, "&Halt Simulation\tCtrl+H", "Parar Simulación\tCtrl+H");
	addTextToLangTable(LangEsTable, "Single &Cycle\tSpace", "Solo un &Ciclo\tSpace");
	addTextToLangTable(LangEsTable, "&Compile\tF5", "&Compilar\tF5");
	addTextToLangTable(LangEsTable, "Compile &As...", "Compilar &Como...");
	addTextToLangTable(LangEsTable, "&Manual...\tF1", "&Manual...\tF1");
	addTextToLangTable(LangEsTable, "&About...", "&Acerca de...");
	addTextToLangTable(LangEsTable, "&File", "&Archivo");
	addTextToLangTable(LangEsTable, "&Edit", "&Editar");
	addTextToLangTable(LangEsTable, "&Settings", "&Configuraciones");
	addTextToLangTable(LangEsTable, "&Instruction", "&Instrucción");
	addTextToLangTable(LangEsTable, "Si&mulate", "Si&mular");
	addTextToLangTable(LangEsTable, "&Compile", "&Compilar");
	addTextToLangTable(LangEsTable, "&Help", "&Ayuda");
	addTextToLangTable(LangEsTable, "no MCU selected", "micro no seleccionado");
	addTextToLangTable(LangEsTable, "cycle time %.2f ms", "tiempo ciclo %.2f ms");
	addTextToLangTable(LangEsTable, "processor clock %.4f MHz", "reloj procesador %.4f MHz");
	addTextToLangTable(LangEsTable, "Internal error relating to PIC paging; make program smaller or reshuffle it.", "Error interno relativo a la paginación del PIC; Haz el programa mas pequeño o reorganizalo");
	addTextToLangTable(LangEsTable, "PWM frequency too fast.", "Frecuencia del PWM demasiado alta.");
	addTextToLangTable(LangEsTable, "PWM frequency too slow.", "Frecuencia del PWM demasiado baja.");
	addTextToLangTable(LangEsTable, "Cycle time too fast; increase cycle time, or use faster crystal.", "Tiempo del Ciclo demasiado rapido; aumenta el tiempo de ciclo, o usa un cristal de mas Mhz.");
	addTextToLangTable(LangEsTable, "Cycle time too slow; decrease cycle time, or use slower crystal.", "Tiempo del Ciclo demasiado lento; incrementa el tiempo de ciclo, o usa un cristal de menos Mhz.");
	addTextToLangTable(LangEsTable, "Couldn't open file '%s'", "No puedo abrir el archivo '%s'");
	addTextToLangTable(LangEsTable, "Zero baud rate not possible.", "Cero baudios no es posible.");
	addTextToLangTable(LangEsTable, "Compile successful; wrote IHEX for PIC16 to '%s'.\r\n\r\nConfiguration word (fuses) has been set for crystal oscillator, BOD enabled, LVP disabled, PWRT enabled, all code protection off.\r\n\r\nUsed %d/%d words of program flash (chip %d%% full).", "Compilación correcta; escrito IHEX para PIC16 en '%s'.\r\n\r\nBits de Configurarión (fuses) han sido establecidos para oscilador a cristal, BOD activado, LVP desactivado, PWRT activado, Todos los bits de protección desactivados.\r\n\r\nUsadas %d/%d palabras de programa en flash (Chip %d%% lleno).");
	addTextToLangTable(LangEsTable, "Type", "Tipo");
	addTextToLangTable(LangEsTable, "Timer", "Temporizador");
	addTextToLangTable(LangEsTable, "Counter", "Contador");
	addTextToLangTable(LangEsTable, "Reset", "Reiniciar");
	addTextToLangTable(LangEsTable, "OK", "OK");
	addTextToLangTable(LangEsTable, "Cancel", "Cancelar");
	addTextToLangTable(LangEsTable, "Empty textbox; not permitted.", "Texto vacio; no permitido");
	addTextToLangTable(LangEsTable, "Bad use of quotes: <%s>", "Mal uso de las comillas: <%s>");
	addTextToLangTable(LangEsTable, "Turn-On Delay", "Activar Retardado");
	addTextToLangTable(LangEsTable, "Turn-Off Delay", "Desactivar Retardado");
	addTextToLangTable(LangEsTable, "Retentive Turn-On Delay", "Activar Retardado con Memoria");
	addTextToLangTable(LangEsTable, "Delay (ms):", "Retardo (ms):");
	addTextToLangTable(LangEsTable, "Delay too long; maximum is 2**31 us.", "Retardo demasiado largo; maximo 2**31 us.");
	addTextToLangTable(LangEsTable, "Delay cannot be zero or negative.", "El retardo no puede ser cero o negativo.");
	addTextToLangTable(LangEsTable, "Count Up", "Contador Creciente");
	addTextToLangTable(LangEsTable, "Count Down", "Contador Decreciente");
	addTextToLangTable(LangEsTable, "Circular Counter", "Contador Circular");
	addTextToLangTable(LangEsTable, "Max value:", "Valor Max:");
	addTextToLangTable(LangEsTable, "True if >= :", "Verdad si >= :");
	addTextToLangTable(LangEsTable, "True if <= :", "Verdad si <= :");
	addTextToLangTable(LangEsTable, "If Equals", "Si igual");
	addTextToLangTable(LangEsTable, "If Not Equals", "Si NO igual");
	addTextToLangTable(LangEsTable, "If Greater Than", "Si mayor que");
	addTextToLangTable(LangEsTable, "If Greater Than or Equal To", "Si mayor o igual que");
	addTextToLangTable(LangEsTable, "If Less Than", "Si menor que");
	addTextToLangTable(LangEsTable, "If Less Than or Equal To", "Si menor o igual que");
	addTextToLangTable(LangEsTable, "'Closed' if:", "'Cerrado' si:");
	addTextToLangTable(LangEsTable, "Move", "Mover");
	addTextToLangTable(LangEsTable, "Read A/D Converter", "Leer Conversor A/D");
	addTextToLangTable(LangEsTable, "Duty cycle var:", "Var Ancho Ciclo:");
	addTextToLangTable(LangEsTable, "Frequency (Hz):", "Frecuencia (Hz):");
	addTextToLangTable(LangEsTable, "Set PWM Duty Cycle", "Poner Ancho de Pulso PWM");
	addTextToLangTable(LangEsTable, "Source:", "Fuente:");
	addTextToLangTable(LangEsTable, "Receive from UART", "Recibido en la UART");
	addTextToLangTable(LangEsTable, "Send to UART", "Enviado a la UART");
	addTextToLangTable(LangEsTable, "Add", "Sumar");
	addTextToLangTable(LangEsTable, "Subtract", "Restar");
	addTextToLangTable(LangEsTable, "Multiply", "Multiplicar");
	addTextToLangTable(LangEsTable, "Divide", "Dividir");
	addTextToLangTable(LangEsTable, "Destination:", "Destino:");
	addTextToLangTable(LangEsTable, "is set := :", "esta puesto := :");
	addTextToLangTable(LangEsTable, "Name:", "Nombre:");
	addTextToLangTable(LangEsTable, "Stages:", "Fases:");
	addTextToLangTable(LangEsTable, "Shift Register", "Registro Desplazamiento");
	addTextToLangTable(LangEsTable, "Not a reasonable size for a shift register.", "No es un tamaño razonable para el Registro de Desplazamiento.");
	addTextToLangTable(LangEsTable, "String:", "Cadena:");
	addTextToLangTable(LangEsTable, "Formatted String Over UART", "Cadena Formateada para UART");
	addTextToLangTable(LangEsTable, "Variable:", "Variable:");
	addTextToLangTable(LangEsTable, "Make Persistent", "Hacer permanente");
	addTextToLangTable(LangEsTable, "Too many elements in subcircuit!", "Demasiados elementos en un SubCircuito!");
	addTextToLangTable(LangEsTable, "Too many rungs!", "Demasiadas Lineas (rungs)!");
	addTextToLangTable(LangEsTable, "Error", "Error");
	addTextToLangTable(LangEsTable, "ANSI C target does not support peripherals (UART, PWM, ADC, EEPROM). Skipping that instruction.", "ANSI C de destino no soporta perifericos (UART, PWM, ADC, EEPROM). Evite esa instrucción.");
	addTextToLangTable(LangEsTable, "Compile successful; wrote C source code to '%s'.\r\n\r\nThis is not a complete C program. You have to provide the runtime and all the I/O routines. See the comments in the source code for information about how to do this.", "Compilación correcta: Escrito Código Fuente en C en '%s'.\r\n\r\nNo es un programa completo en C. Tiene que añadirle el procedimiento principal y todas las rutinas de E/S. Vea los comentarios en el código fuente para mas información sobre como hacer esto");
	addTextToLangTable(LangEsTable, "Cannot delete rung; program must have at least one rung.", "No puedo borrar la Linea (rung); el programa debe tener al menos una Linea (rung).");
	addTextToLangTable(LangEsTable, "Out of memory; simplify program or choose microcontroller with more memory.", "Fuera de Memoria; Simplifique el programa o elija un micro con mas memoria..");
	addTextToLangTable(LangEsTable, "Must assign pins for all ADC inputs (name '%s').", "Debe asignar patas para todas las entradas del ADC (nombre '%s').");
	addTextToLangTable(LangEsTable, "Internal limit exceeded (number of vars)", "Limite interno superado (numero de variables)");
	addTextToLangTable(LangEsTable, "Internal relay '%s' never assigned; add its coil somewhere.", "No ha asignado el rele interno '%s'; añada la bobina en cualquier parte del programa.");
	addTextToLangTable(LangEsTable, "Must assign pins for all I/O.\r\n\r\n'%s' is not assigned.", "Debe asignar patas a todas las E/S.\r\n\r\n'%s' no esta asignada.");
	addTextToLangTable(LangEsTable, "UART in use; pins %d and %d reserved for that.", "UART en uso; patas %d y %d reservadas para eso.");
	addTextToLangTable(LangEsTable, "PWM in use; pin %d reserved for that.", "PWM en uso; pata %d reservada para eso.");
	addTextToLangTable(LangEsTable, "UART baud rate generator: divisor=%d actual=%.4f for %.2f%% error.\r\n\r\nThis is too large; try a different baud rate (slower probably), or a crystal frequency chosen to be divisible by many common baud rates (e.g. 3.6864 MHz, 14.7456 MHz).\r\n\r\nCode will be generated anyways but serial may be unreliable or completely broken.", "UART generador de baudios: divisor=%d actual=%.4f para %.2f%% error.\r\n\r\nEs demasiado grande; Prueba con otro valor de baudios (probablemente menor), o un cristal cuya frecuencia sea divible por los baudios mas comunes (p.e. 3.6864MHz, 14.7456MHz).\r\n\r\nEl código se genera de todas formas pero las tramas serie sean inestable o no entendible.");
	addTextToLangTable(LangEsTable, "UART baud rate generator: too slow, divisor overflows. Use a slower crystal or a faster baud rate.\r\n\r\nCode will be generated anyways but serial will likely be completely broken.", "UART generador de baudios: demasiado lento, divisor demasiado grande. Use un cristal mas lento o mayor baudios.\r\n\r\nEl código se genera de todas formas pero las tramas serie serán no entendible..");
	addTextToLangTable(LangEsTable, "Couldn't open '%s'\n", "No puedo abrir '%s'\n");
	addTextToLangTable(LangEsTable, "Timer period too short (needs faster cycle time).", "Periodo de Tiempo demasiado corto (se necesita un tiempo de ciclo menor).");
	addTextToLangTable(LangEsTable, "Timer period too long (max 32767 times cycle time); use a slower cycle time.", "Periodo del temporizador demasiado largo (max. 32767 veces el tiempo de ciclo); use un tiempo de ciclo mayor.");
	addTextToLangTable(LangEsTable, "Constant %d out of range: -32768 to 32767 inclusive.", "Constante %d fuera de rango: -32768 a 32767 inclusive.");
	addTextToLangTable(LangEsTable, "Move instruction: '%s' not a valid destination.", "Instrucción Move: '%s' no es valido el destino.");
	addTextToLangTable(LangEsTable, "Math instruction: '%s' not a valid destination.", "Instrucción Math: '%s' no es valido el destino.");
	addTextToLangTable(LangEsTable, "Piecewise linear lookup table with zero elements!", "tabla de linealizacion por segmentos con cero elementos!");
	addTextToLangTable(LangEsTable, "x values in piecewise linear table must be strictly increasing.", "Los valores X en la tabla de linealización por segmentos deben ser estrictamente incrementales.");
	addTextToLangTable(LangEsTable, "Numerical problem with piecewise linear lookup table. Either make the table entries smaller, or space the points together more closely.\r\n\r\nSee the help file for details.", "Problema numérico con la tabla de linealización por segmentos. Haz la tabla de entradas mas pequeña, o aleja mas los puntos juntos.\r\n\r\nMira la ayuda para mas detalles.");
	addTextToLangTable(LangEsTable, "Multiple escapes (\\0-9) present in format string, not allowed.", "No esta permitido mas de un caracter especial (\\0-9) dentro de la cadena de caractares.");
	addTextToLangTable(LangEsTable, "Bad escape: correct form is \\xAB.", "Caracter Especial Erroneo: la forma correcta es = \\xAB.");
	addTextToLangTable(LangEsTable, "Bad escape '\\%c'", "Caracter Especial Erroneo '\\%c'");
	addTextToLangTable(LangEsTable, "Variable is interpolated into formatted string, but none is specified.", "Se ha declarado un parametro dentro la cadena de caracteres, pero falta especificar la variable.");
	addTextToLangTable(LangEsTable, "No variable is interpolated into formatted string, but a variable name is specified. Include a string like '\\-3', or leave variable name blank.", "No se ha declarado un parametro dentro de la cadena de caractares pero sin embargo se ha especificado una variable. Añada un cadena como '\\-3', o quite el nombre de la variable.");
	addTextToLangTable(LangEsTable, "Empty row; delete it or add instructions before compiling.", "Fila vacia; borrela o añada instrucciones antes de compilar.");
	addTextToLangTable(LangEsTable, "Couldn't write to '%s'", "No puedo escribir en  '%s'.");
	addTextToLangTable(LangEsTable, "Unsupported op (anything ADC, PWM, UART, EEPROM) for interpretable target.", "Op no soportada en el interprete (algun ADC, PWM, UART, EEPROM).");
	addTextToLangTable(LangEsTable, "Compile successful; wrote interpretable code to '%s'.\r\n\r\nYou probably have to adapt the interpreter to your application. See the documentation.", "Compilación correcta: Código para interprete escrito en '%s'.\r\n\r\nProblablemente tengas que adaptar el interprete a tu aplicación. Mira la documentación.");
	addTextToLangTable(LangEsTable, "Microcontroller '%s' not supported.\r\n\r\nDefaulting to no selected MCU.", "Microcontrolador '%s' no sorportado.\r\n\r\nForzando ninguna CPU.");
	addTextToLangTable(LangEsTable, "File format error; perhaps this program is for a newer version of LDmicro?", "Error en el formato de archivo; quizas este programa es una version mas moderna de LDmicro?.");
	addTextToLangTable(LangEsTable, "Index:", "Indice:");
	addTextToLangTable(LangEsTable, "Points:", "Puntos:");
	addTextToLangTable(LangEsTable, "Count:", "Cantidad:");
	addTextToLangTable(LangEsTable, "Edit table of ASCII values like a string", "Editar tabla de valores ascii como una cadena");
	addTextToLangTable(LangEsTable, "Look-Up Table", "Buscar en Tabla");
	addTextToLangTable(LangEsTable, "Piecewise Linear Table", "Tabla de linealización por segmentos");
	addTextToLangTable(LangEsTable, "POPTools Error", "POPTools Error");
	addTextToLangTable(LangEsTable, "Compile Successful", "Compilación Correcta");
	addTextToLangTable(LangEsTable, "digital in", "entrada digital");
	addTextToLangTable(LangEsTable, "digital out", "salida digital");
	addTextToLangTable(LangEsTable, "int. relay", "rele interno");
	addTextToLangTable(LangEsTable, "UART tx", "UART tx");
	addTextToLangTable(LangEsTable, "UART rx", "UART rx");
	addTextToLangTable(LangEsTable, "PWM out", "salida PWM");
	addTextToLangTable(LangEsTable, "turn-on delay", "activar retardo");
	addTextToLangTable(LangEsTable, "turn-off delay", "desactivar retardo");
	addTextToLangTable(LangEsTable, "retentive timer", "temporizador con memoria");
	addTextToLangTable(LangEsTable, "counter", "contador");
	addTextToLangTable(LangEsTable, "general var", "var general");
	addTextToLangTable(LangEsTable, "adc input", "entrada adc");
	addTextToLangTable(LangEsTable, "<corrupt!>", "<estropeado!>");
	addTextToLangTable(LangEsTable, "(not assigned)", "(no asignado)");
	addTextToLangTable(LangEsTable, "<no UART!>", "<no UART!>");
	addTextToLangTable(LangEsTable, "<no PWM!>", "<no PWM!>");
	addTextToLangTable(LangEsTable, "TOF: variable cannot be used elsewhere", "TOF: la variable no puede ser usada en otra parte");
	addTextToLangTable(LangEsTable, "TON: variable cannot be used elsewhere", "TON: la variable no puede ser usada en otra parte");
	addTextToLangTable(LangEsTable, "RTO: variable can only be used for RES elsewhere", "RTO: la variable solo puede ser usada como RES en otra parte");
	addTextToLangTable(LangEsTable, "Variable '%s' not assigned to, e.g. with a MOV statement, an ADD statement, etc.\r\n\r\nThis is probably a programming error; now it will always be zero.", "Variable '%s' no asignada, p.e. con el comando MOV, una instrucción ADD, etc.\r\n\r\nEsto es probablemente un error de programación; valdrá cero.");
	addTextToLangTable(LangEsTable, "Variable for '%s' incorrectly assigned: %s.", "Variable para '%s' incorrectamente asignada: %s.");
	addTextToLangTable(LangEsTable, "Division by zero; halting simulation", "División por cero; Parando simulación");
	addTextToLangTable(LangEsTable, "!!!too long!!!", "!!Muy grande!!");
	addTextToLangTable(LangEsTable, "\n\nI/O ASSIGNMENT:\n\n", "\n\nE/S ASIGNACIÓN:\n\n");
	addTextToLangTable(LangEsTable, "  Name                       | Type               | Pin\n", "  Nombre                     | Tipo               | Pata\n");
	addTextToLangTable(LangEsTable, "Serial (UART) will use pins %d and %d.\r\n\r\n", "El Puerto Serie (UART) usará los pines %d y %d.\r\n\r\n");
}

static LangTableChar *l;

void setLanguage(unsigned int id)
{
	switch(id) {
	case 1: // Ingles
		l = nullptr;
		break;
	case 2: // Espanhol
		l = LangEsTable;
		break;
	default: // Qualquer outro id: Portugues!
		l = LangPtTable;
	}
}

PCWSTR getRibbonLocalizedExampleGalleryHeader(eExampleGalleryHeader header)
{
	PCWSTR pPTBR = L"", pEN = L"", pES = L"";

	switch(header) {
			SET_LANGUAGE_STRINGS(eExampleGalleryHeader_IO          , L"I/O"            , L"I/O"            , L"I/O");
			SET_LANGUAGE_STRINGS(eExampleGalleryHeader_Timers      , L"Temporizadores" , L"Timers"         , L"I/O");
			SET_LANGUAGE_STRINGS(eExampleGalleryHeader_Counters    , L"Contadores"     , L"Counters"       , L"I/O");
			SET_LANGUAGE_STRINGS(eExampleGalleryHeader_Variables   , L"Variáveis"      , L"Variables"      , L"I/O");
			SET_LANGUAGE_STRINGS(eExampleGalleryHeader_Conditionals, L"Condicionais"   , L"Conditionals"   , L"I/O");
			SET_LANGUAGE_STRINGS(eExampleGalleryHeader_Mathematics , L"Matemática"     , L"Mathematics"    , L"I/O");
			SET_LANGUAGE_STRINGS(eExampleGalleryHeader_Analogs     , L"Analógicos"     , L"Analogs"        , L"I/O");
			SET_LANGUAGE_STRINGS(eExampleGalleryHeader_Motors      , L"Motores"        , L"Motors"         , L"I/O");
			SET_LANGUAGE_STRINGS(eExampleGalleryHeader_ModBUS      , L"ModBUS"         , L"ModBUS"         , L"ModBUS");
			SET_LANGUAGE_STRINGS(eExampleGalleryHeader_RS485_Text  , L"RS-485 - Texto" , L"RS-485 - Text"  , L"I/O");
			SET_LANGUAGE_STRINGS(eExampleGalleryHeader_RS485_Others, L"RS-485 - Outros", L"RS-485 - Others", L"I/O");
			SET_LANGUAGE_STRINGS(eExampleGalleryHeader_Applications, L"Aplicações"     , L"Applications"   , L"I/O");
	}

	switch(POPSettings.idLanguage) {
		case  1: return pEN;
		case  2: return pES;
		default: return pPTBR;
	}
}

PCWSTR getRibbonLocalizedLabel(UINT nCmdID)
{
	PCWSTR pPTBR = L"", pEN = L"", pES = L"";

	switch(nCmdID) {
		SET_LANGUAGE_STRINGS(cmdTabHome                  , L"Início"                           , L"Home"                          , L"Inicio"                             );
		SET_LANGUAGE_STRINGS(cmdTabInstrLogic            , L"Controles Lógicos"                , L"Logic Controls"                , L"Controles logicos"                  );
		SET_LANGUAGE_STRINGS(cmdTabInstrAutom            , L"Controles Automação"              , L"Automation Controls"           , L"Controles de Automacion"            );
		SET_LANGUAGE_STRINGS(cmdTabSimulation            , L"Simulação"                        , L"Simulation"                    , L"Simulacion"                         );
		SET_LANGUAGE_STRINGS(cmdGroupInstr               , L"Instrução"                        , L"Instruction"                   , L"Instruccion"                        );
		SET_LANGUAGE_STRINGS(cmdGroupLine                , L"Linhas"                           , L"Lines"                         , L"Lineas"                             );
		SET_LANGUAGE_STRINGS(cmdGroupFind                , L"Busca"                            , L"Find"                          , L"Busqueda"                           );
		SET_LANGUAGE_STRINGS(cmdGroupConfig              , L"Configurações"                    , L"Configuration"                 , L"Configuraciones"                    );
		SET_LANGUAGE_STRINGS(cmdGroupHelp                , L"Ajuda"                            , L"Help"                          , L"Ayuda"                              );
		SET_LANGUAGE_STRINGS(cmdGroupIO                  , L"I/O"                              , L"I/O"                           , L"I/O"                                );
		SET_LANGUAGE_STRINGS(cmdGroupTimer               , L"Temporizadores"                   , L"Timers"                        , L"Temporizadores"                     );
		SET_LANGUAGE_STRINGS(cmdGroupCounter             , L"Contadores"                       , L"Counters"                      , L"Contador"                           );
		SET_LANGUAGE_STRINGS(cmdGroupVar                 , L"Variáveis"                        , L"Variables"                     , L"Variable"                           );
		SET_LANGUAGE_STRINGS(cmdGroupCond                , L"Condicionais"                     , L"Conditionals"                  , L"Condicionales"                      );
		SET_LANGUAGE_STRINGS(cmdGroupMath                , L"Matemática"                       , L"Mathematics"                   , L"Matematica"                         );
		SET_LANGUAGE_STRINGS(cmdGroupAnalog              , L"Analógicos"                       , L"Analogs"                       , L"Analogico"                          );
		SET_LANGUAGE_STRINGS(cmdGroupMotors              , L"Motores"                          , L"Motors"                        , L"Motores"                            );
		SET_LANGUAGE_STRINGS(cmdGroupEnc                 , L"Encoder Incremental"              , L"Incremental encoder"           , L"Encoder Incremental"                );
		SET_LANGUAGE_STRINGS(cmdGroupSSIEnc              , L"Encoder SSI"                      , L"SSI Encoder"                   , L"Encoder SSI"                        );
		SET_LANGUAGE_STRINGS(cmdGroupCommText            , L"RS-485 - Texto"                   , L"RS-485 - Text"                 , L"RS-485 - Texto"                     );
		SET_LANGUAGE_STRINGS(cmdGroupCommModBUS          , L"ModBUS"                           , L"ModBUS"                        , L"ModBUS"                             );
		SET_LANGUAGE_STRINGS(cmdGroupCommOthers          , L"RS-485 - Outros"                  , L"RS-485 - Others"               , L"RS-485 - Otros"                     );
		SET_LANGUAGE_STRINGS(cmdDropDownIO               , L"Mais I/O"                         , L"More I/O"                      , L"Mas I/O"                            );
		SET_LANGUAGE_STRINGS(cmdDropDownMath             , L"Mais"                             , L"More"                          , L"Mas"                                );
		SET_LANGUAGE_STRINGS(cmdGroupSimulation          , L"Simulação"                        , L"Simulation"                    , L"Simulacion"                         );
		SET_LANGUAGE_STRINGS(cmdGroupSimulLog            , L"Registro de Dados"                , L"Data log"                      , L"Registro de Datos"                  );
		SET_LANGUAGE_STRINGS(cmdGroupSimulExit           , L"Sair"                             , L"Exit"                          , L"Salir"                              );
		SET_LANGUAGE_STRINGS(cmdGroupActions             , L"Ações"                            , L"Actions"                       , L"Acciones"                           );
		SET_LANGUAGE_STRINGS(cmdGroupComment             , L"Documentação"                     , L"Documentation"                 , L"Documentos"                         );
		SET_LANGUAGE_STRINGS(cmdGroupNavigate            , L"Navegação"                        , L"Navigation"                    , L"Navegacion"                         );

		SET_LANGUAGE_STRINGS(cmdRecentList               , L"Projetos Recentes"                , L"Recent Projects"               , L"Proyectos Recientes"                );
		SET_LANGUAGE_STRINGS(cmdFileNew                  , L"Novo"                             , L"New"                           , L"Nuevo"                              );
		SET_LANGUAGE_STRINGS(cmdFileOpen                 , L"Abrir"                            , L"Open"                          , L"Abrir"                              );
		SET_LANGUAGE_STRINGS(cmdFileClose                , L"Fechar"                           , L"Close"                         , L"Cerrar"                             );
		SET_LANGUAGE_STRINGS(cmdFileSave                 , L"Salvar"                           , L"Save"                          , L"Salvar"                             );
		SET_LANGUAGE_STRINGS(cmdFileSaveAsLadder         , L"Salvar como Diagrama Ladder"      , L"Save as Ladder Diagram"        , L"Salvar como Diagrama Ladder"        );
		SET_LANGUAGE_STRINGS(cmdFileSaveAsC              , L"Exportar como arquivo C"          , L"Export as C File"              , L"Exportar como archivo C"            );
		SET_LANGUAGE_STRINGS(cmdFileSaveAsText           , L"Exportar como arquivo texto"      , L"Export as Text File"           , L"Exportar como archivo texto"        );
		SET_LANGUAGE_STRINGS(cmdPrint                    , L"Imprimir..."                      , L"Print..."                      , L"Imprimir"                           );
		SET_LANGUAGE_STRINGS(cmdAbout                    , L"Sobre..."                         , L"About..."                      , L"Sobre..."                           );
		SET_LANGUAGE_STRINGS(cmdExit                     , L"Sair"                             , L"Exit"                          , L"Salir"                              );

		SET_LANGUAGE_STRINGS(cmdUndo                     , L"Desfazer"                         , L"Undo"                          , L"Deshacer"                           );
		SET_LANGUAGE_STRINGS(cmdRedo                     , L"Refazer"                          , L"Redo"                          , L"Rehacer"                            );
		SET_LANGUAGE_STRINGS(cmdMoveLineUp               , L"Mover Acima"                      , L"Move Up"                       , L"Mover hacia arriba"                 );
		SET_LANGUAGE_STRINGS(cmdMoveLineDown             , L"Mover Abaixo"                     , L"Move Down"                     , L"Mover hacia abajo"                  );
		SET_LANGUAGE_STRINGS(cmdCopyLine                 , L"Copiar Linha"                     , L"Copy Line"                     , L"Copiar Linea"                       );
		SET_LANGUAGE_STRINGS(cmdPasteLineBefore          , L"Colar Antes"                      , L"Paste Before"                  , L"Pegar antes"                        );
		SET_LANGUAGE_STRINGS(cmdPasteLineAfter           , L"Colar Depois"                     , L"Paste After"                   , L"Pegar despues"                      );
		SET_LANGUAGE_STRINGS(cmdInsertLineAfter          , L"Inserir Após"                     , L"Insert After"                  , L"Inserir despues"                    );
		SET_LANGUAGE_STRINGS(cmdInsertLineBefore         , L"Inserir Antes"                    , L"Insert Before"                 , L"Inserir antes"                      );
		SET_LANGUAGE_STRINGS(cmdGoHome                   , L"Início"                           , L"Home"                          , L"Inicio"                             );
		SET_LANGUAGE_STRINGS(cmdGoEnd                    , L"Final"                            , L"End"                           , L"Final"                              );
		SET_LANGUAGE_STRINGS(cmdInstrParallel            , L"Paralelo"                         , L"Parallel"                      , L"Paralelo"                           );
		SET_LANGUAGE_STRINGS(cmdCopyInstr                , L"Copiar"                           , L"Copy"                          , L"Copiar"                             );
		SET_LANGUAGE_STRINGS(cmdPasteInstr               , L"Colar"                            , L"Paste"                         , L"Pegar"                              );
		SET_LANGUAGE_STRINGS(cmdDeleteInstr              , L"Excluir"                          , L"Delete"                        , L"Excluir"                            );
		SET_LANGUAGE_STRINGS(cmdDeleteLine               , L"Excluir"                          , L"Delete"                        , L"Nuevo");
		SET_LANGUAGE_STRINGS(cmdFindDialog               , L"Localizar e Substituir"           , L"Find and Replace"              , L"Localizar y Substituir"             );
		SET_LANGUAGE_STRINGS(cmdFind                     , L"Localizar Próxima"                , L"Find Next"                     , L"Localizar Proxima"                  );

		SET_LANGUAGE_STRINGS(cmdInstrComment             , L"Comentário"                       , L"Comment"                       , L"Comentario"                         );

		SET_LANGUAGE_STRINGS(cmdInstrContact             , L"Contato"                          , L"Contact"                       , L"Contacto"                           );
		SET_LANGUAGE_STRINGS(cmdInstrCoil                , L"Bobina"                           , L"Coil"                          , L"Bobina"                             );
		SET_LANGUAGE_STRINGS(cmdInstrOneShotFalling      , L"Borda de Descida"                 , L"One Shot Falling"              , L"Borde de bajada"                    );
		SET_LANGUAGE_STRINGS(cmdInstrOneShotRising       , L"Borda de Subida"                  , L"One Shot Rising"               , L"Borde de subida"                    );
		SET_LANGUAGE_STRINGS(cmdInstrCircuitOpen         , L"Circuito Aberto"                  , L"Open Circuit"                  , L"Circuito abierto"                   );
		SET_LANGUAGE_STRINGS(cmdInstrCircuitClosed       , L"Circuito Fechado"                 , L"Closed Circuit"                , L"Circuito abierto"                   );
		SET_LANGUAGE_STRINGS(cmdInstrMasterRelayControl  , L"Chave Geral"                      , L"Master Relay Control"          , L"Llave general"                      );

		SET_LANGUAGE_STRINGS(cmdInstrTimerON             , L"Atraso para Ligar"                , L"Timer ON"                      , L"Retrazo para prender"               );
		SET_LANGUAGE_STRINGS(cmdInstrTimerOFF            , L"Atraso para Desligar"             , L"Timer OFF"                     , L"Retrazo para apagar"                );
		SET_LANGUAGE_STRINGS(cmdInstrTimerONRet          , L"Atraso com Memória"               , L"Timer ON Retentive"            , L"Retrazo con memoria"                );
		SET_LANGUAGE_STRINGS(cmdInstrSchedule            , L"Agendador de Tarefa"              , L"Scheduler"                     , L"Agenda de tareas"                   );
		SET_LANGUAGE_STRINGS(cmdInstrTimerReset          , L"Zerar"                            , L"Reset"                         , L"______"                             );

		SET_LANGUAGE_STRINGS(cmdInstrCounterInc          , L"Incremental"                      , L"Incremental"                   , L"Incremental"                        );
		SET_LANGUAGE_STRINGS(cmdInstrCounterDec          , L"Decremental"                      , L"Decremental"                   , L"Decrementalo"                       );
		SET_LANGUAGE_STRINGS(cmdInstrCounterCirc         , L"Circular"                         , L"Circular"                      , L"Circular"                           );
		SET_LANGUAGE_STRINGS(cmdInstrCounterReset        , L"Zerar"                            , L"Reset"                         , L"______"                             );

		SET_LANGUAGE_STRINGS(cmdInstrMathAdd             , L"Somar"                            , L"Add"                           , L"Sumar"                              );
		SET_LANGUAGE_STRINGS(cmdInstrMathSub             , L"Subtrair"                         , L"Subtract"                      , L"Subtrair"                           );
		SET_LANGUAGE_STRINGS(cmdInstrMathMult            , L"Multiplicar"                      , L"Multiply"                      , L"Multiplicar"                        );
		SET_LANGUAGE_STRINGS(cmdInstrMathDivide          , L"Dividir"                          , L"Divide"                        , L"Dividir"                            );
		SET_LANGUAGE_STRINGS(cmdInstrMathModulo          , L"Resto da Divisão"                 , L"Modulo"                        , L"Modulo"                             );
		SET_LANGUAGE_STRINGS(cmdInstrMathSqrt            , L"Raiz Quadrada"                    , L"Square Root"                   , L"Raiz Cuadrada"                      );
		SET_LANGUAGE_STRINGS(cmdInstrShiftRegister       , L"Fila de Variáveis"                , L"Shift Register"                , L"Fila de Variables"                  );
		SET_LANGUAGE_STRINGS(cmdInstrLookUpTable         , L"Tabela de Busca"                  , L"Look-Up Table"                 , L"Tabla de Busca"                     );
		SET_LANGUAGE_STRINGS(cmdInstrPieceWiseLinear     , L"Linearização por Segmentos"       , L"Piecewise Linear"              , L"Linear por seguimientos"            );
		SET_LANGUAGE_STRINGS(cmdInstrRand                , L"Número Randômico"                 , L"Random Number"                 , L"Numero Randonico"                   );
		SET_LANGUAGE_STRINGS(cmdInstrAbs                 , L"Valor Absoluto"                   , L"Absolute Value"                , L"Valor Absoluto"                     );

		SET_LANGUAGE_STRINGS(cmdInstrMov                 , L"Mover Valor"                      , L"Move Value"                    , L"Mover valor"                        );
		SET_LANGUAGE_STRINGS(cmdInstrSetBit              , L"Liga / Desliga Bit"               , L"Set / Reset Bit"               , L"Prende / Apaga Bit"                 );
		SET_LANGUAGE_STRINGS(cmdInstrCheckBit            , L"Checar Bit"                       , L"Check Bit"                     , L"Chequear Bit"                       );
		SET_LANGUAGE_STRINGS(cmdInstrPersist             , L"Persistente"                      , L"Persist"                       , L"Persistente"                        );

		SET_LANGUAGE_STRINGS(cmdInstrCondEqual           , L"Igual"                            , L"Equal"                         , L"Igual"                              );
		SET_LANGUAGE_STRINGS(cmdInstrCondNotEqual        , L"Diferente"                        , L"Not Equal"                     , L"Diferente"                          );
		SET_LANGUAGE_STRINGS(cmdInstrCondGreater         , L"Maior"                            , L"Greater"                       , L"Mayor"                              );
		SET_LANGUAGE_STRINGS(cmdInstrCondGreaterEqual    , L"Maior ou Igual"                   , L"Greater or Equal"              , L"Mayor o Igual"                      );
		SET_LANGUAGE_STRINGS(cmdInstrCondLesser          , L"Menor"                            , L"Lesser"                        , L"Menor"                              );
		SET_LANGUAGE_STRINGS(cmdInstrCondLesserEqual     , L"Menor ou Igual"                   , L"Lesser or Equal"               , L"Menor o Igual"                      );

		SET_LANGUAGE_STRINGS(cmdInstrReadAD              , L"Leitura de A/D"                   , L"Read A/D"                      , L"Lectura de A/D"                     );
		SET_LANGUAGE_STRINGS(cmdInstrWriteDA             , L"Escrita no D/A"                   , L"Write D/A"                     , L"Escrita no D/A"                     );

		SET_LANGUAGE_STRINGS(cmdInstrPWM                 , L"Saída PWM"                        , L"PWM Output"                    , L"Salida PWM"                         );
		SET_LANGUAGE_STRINGS(cmdInstrRampDA              , L"Rampa de Aceleração/Desaceleração", L"Acceleration/Deceleration Ramp", L"Rampa de Aceleracion/Desaceleracion");
		SET_LANGUAGE_STRINGS(cmdInstrReadEnc             , L"Leitura de Encoder"               , L"Read Encoder"                  , L"Lectura de Encoder"                 );
		SET_LANGUAGE_STRINGS(cmdInstrResetEnc            , L"Escrita no Encoder"               , L"Write Encoder"                 , L"Escrita de Encoder"                 );
		SET_LANGUAGE_STRINGS(cmdInstrPID                 , L"PID"                              , L"PID"                           , L"PID"                                );

		SET_LANGUAGE_STRINGS(cmdInstrWriteChar           , L"Escrita de Caracter"              , L"Write Char"                    , L"Escrita de Caracteres"              );
		SET_LANGUAGE_STRINGS(cmdInstrReadChar            , L"Leitura de Caracter"              , L"Read Char"                     , L"Lectura de Caracteres"              );
		SET_LANGUAGE_STRINGS(cmdInstrReadFormatString    , L"Ler String Formatada"             , L"Read Formatted String"         , L"Leer String Formatada"              );
		SET_LANGUAGE_STRINGS(cmdInstrWriteFormatString   , L"Escrever String Formatada"        , L"Write Formatted String"        , L"Escribir String Formatada"          );

		SET_LANGUAGE_STRINGS(cmdInstrReadUSS             , L"Leitura USS"                      , L"Read USS"                      , L"Lectura USS"                        );
		SET_LANGUAGE_STRINGS(cmdInstrWriteUSS            , L"Escrita USS"                      , L"Write USS"                     , L"Escrita USS"                        );
		SET_LANGUAGE_STRINGS(cmdInstrReadNS600           , L"Leitura de NS-600 Yaskawa"        , L"Read NS-600 Yaskawa"           , L"Lectura de NS-600 Yaskawa"          );
		SET_LANGUAGE_STRINGS(cmdInstrWriteNS600          , L"Escrita de NS-600 Yaskawa"        , L"Write NS-600 Yaskawa"          , L"Escrita de NS-600 Yaskawa"          );

		SET_LANGUAGE_STRINGS(cmdInstrReadModBUS          , L"Ler Registrador ModBUS"           , L"Read ModBUS Register"          , L"Leer Registrador ModBUS"            );
		SET_LANGUAGE_STRINGS(cmdInstrWriteModBUS         , L"Escrever Registrador ModBUS"      , L"Write ModBUS Register"         , L"Escribir Registrador ModBUS"        );

		SET_LANGUAGE_STRINGS(cmdConfig                   , L"Projeto"                          , L"Project"                       , L"Proyecto"                           );
		SET_LANGUAGE_STRINGS(cmdSettings                 , L"Preferências"                     , L"Settings"                      , L"Preferencias"                       );

		SET_LANGUAGE_STRINGS(cmdSimulation               , L"Modo de Simulação"                , L"Simulation mode"               , L"Modo de Simulacion"                 );
		SET_LANGUAGE_STRINGS(cmdSimulationExit           , L"Sair da Simulação"                , L"Exit Simulation"               , L"Salir de Simulacion"                );
		SET_LANGUAGE_STRINGS(cmdSimulationStart          , L"Iniciar"                          , L"Start"                         , L"Iniciar"                            );
		SET_LANGUAGE_STRINGS(cmdSimulationPause          , L"Pausar"                           , L"Pause"                         , L"Pausar"                             );
		SET_LANGUAGE_STRINGS(cmdSimulationStop           , L"Interromper"                      , L"Stop"                          , L"Interrumpir"                        );
		SET_LANGUAGE_STRINGS(cmdSimulationSingleCycle    , L"Simples Ciclo"                    , L"Single Cycle"                  , L"Simples ciclo"                      );
		SET_LANGUAGE_STRINGS(cmdSimulationLogStart       , L"Iniciar"                          , L"Start"                         , L"Iniciar"                            );
		SET_LANGUAGE_STRINGS(cmdSimulationLogStop        , L"Parar"                            , L"Stop"                          , L"Parar"                              );

		SET_LANGUAGE_STRINGS(cmdCompile                  , L"Compilar"                         , L"Compile"                       , L"Compilar"                           );
		SET_LANGUAGE_STRINGS(cmdCompileAndProgram        , L"Compilar e Gravar"                , L"Compile and Program"           , L"Compilar y Grabar"                  );

		SET_LANGUAGE_STRINGS(cmdDebug                    , L"Depurar"                          , L"Debug"                         , L"Depurar"                            );

		SET_LANGUAGE_STRINGS(cmdUserManual               , L"Manual"                           , L"Manual"                        , L"Manual"                             );
		SET_LANGUAGE_STRINGS(cmdKeyboardManual           , L"Teclado"                          , L"Keyboard"                      , L"Teclado"                            );

		// Example comands list
		SET_LANGUAGE_STRINGS(cmdExamples                 , L"Exemplos"                         , L"Examples"                       , L"Nuevo"                             );

		SET_LANGUAGE_STRINGS(cmdExampleComment           , L"Comentário"                       , L"Comment"                       , L"Comentario"                         );

		SET_LANGUAGE_STRINGS(cmdExampleContact           , L"Contato"                          , L"Contact"                       , L"Contacto"                           );
		SET_LANGUAGE_STRINGS(cmdExampleCoil              , L"Bobina"                           , L"Coil"                          , L"Bobina"                             );
		SET_LANGUAGE_STRINGS(cmdExampleOneShotFalling    , L"Borda de Descida"                 , L"One Shot Falling"              , L"Borde de bajada"                    );
		SET_LANGUAGE_STRINGS(cmdExampleOneShotRising     , L"Borda de Subida"                  , L"One Shot Rising"               , L"Borde de subida"                    );
		SET_LANGUAGE_STRINGS(cmdExampleCircuitOpen       , L"Circuito Aberto"                  , L"Open Circuit"                  , L"Circuito abierto"                   );
		SET_LANGUAGE_STRINGS(cmdExampleCircuitClosed     , L"Circuito Fechado"                 , L"Closed Circuit"                , L"Circuito abierto"                   );
		SET_LANGUAGE_STRINGS(cmdExampleMasterRelayControl, L"Chave Geral"                      , L"Master Relay Control"          , L"Llave general"                      );

		SET_LANGUAGE_STRINGS(cmdExampleTimerON           , L"Atraso para Ligar"                , L"Timer ON"                      , L"Retrazo para prender"               );
		SET_LANGUAGE_STRINGS(cmdExampleTimerOFF          , L"Atraso para Desligar"             , L"Timer OFF"                     , L"Retrazo para apagar"                );
		SET_LANGUAGE_STRINGS(cmdExampleTimerONRet        , L"Atraso com Memória"               , L"Timer ON Retentive"            , L"Retrazo con memoria"                );
		SET_LANGUAGE_STRINGS(cmdExampleSchedule          , L"Agendador de Tarefa"              , L"Scheduler"                     , L"Agenda de tareas"                   );
		SET_LANGUAGE_STRINGS(cmdExampleTimerReset        , L"Zerar"                            , L"Reset"                         , L"______"                             );

		SET_LANGUAGE_STRINGS(cmdExampleCounterInc        , L"Incremental"                      , L"Incremental"                   , L"Incremental"                        );
		SET_LANGUAGE_STRINGS(cmdExampleCounterDec        , L"Decremental"                      , L"Decremental"                   , L"Decrementalo"                       );
		SET_LANGUAGE_STRINGS(cmdExampleCounterCirc       , L"Circular"                         , L"Circular"                      , L"Circular"                           );
		SET_LANGUAGE_STRINGS(cmdExampleCounterReset      , L"Zerar"                            , L"Reset"                         , L"______"                             );

		SET_LANGUAGE_STRINGS(cmdExampleMathAdd           , L"Somar"                            , L"Add"                           , L"Sumar"                              );
		SET_LANGUAGE_STRINGS(cmdExampleMathSub           , L"Subtrair"                         , L"Subtract"                      , L"Subtrair"                           );
		SET_LANGUAGE_STRINGS(cmdExampleMathMult          , L"Multiplicar"                      , L"Multiply"                      , L"Multiplicar"                        );
		SET_LANGUAGE_STRINGS(cmdExampleMathDivide        , L"Dividir"                          , L"Divide"                        , L"Dividir"                            );
		SET_LANGUAGE_STRINGS(cmdExampleMathModulo        , L"Resto da Divisão"                 , L"Modulo"                        , L"Modulo"                             );
		SET_LANGUAGE_STRINGS(cmdExampleMathSqrt          , L"Raiz Quadrada"                    , L"Square Root"                   , L"Raiz Cuadrada"                      );
		SET_LANGUAGE_STRINGS(cmdExampleShiftRegister     , L"Fila de Variáveis"                , L"Shift Register"                , L"Fila de Variables"                  );
		SET_LANGUAGE_STRINGS(cmdExampleLookUpTable       , L"Tabela de Busca"                  , L"Look-Up Table"                 , L"Tabla de Busca"                     );
		SET_LANGUAGE_STRINGS(cmdExamplePieceWiseLinear   , L"Linearização por Segmentos"       , L"Piecewise Linear"              , L"Linear por seguimientos"            );
		SET_LANGUAGE_STRINGS(cmdExampleRand              , L"Número Randômico"                 , L"Random Number"                 , L"Numero Randonico"                   );
		SET_LANGUAGE_STRINGS(cmdExampleAbs               , L"Valor Absoluto"                   , L"Absolute Value"                , L"Valor Absoluto"                     );

		SET_LANGUAGE_STRINGS(cmdExampleMov               , L"Mover Valor"                      , L"Move Value"                    , L"Mover valor"                        );
		SET_LANGUAGE_STRINGS(cmdExampleSetBit            , L"Liga / Desliga Bit"               , L"Set / Reset Bit"               , L"Prende / Apaga Bit"                 );
		SET_LANGUAGE_STRINGS(cmdExampleCheckBit          , L"Checar Bit"                       , L"Check Bit"                     , L"Chequear Bit"                       );
		SET_LANGUAGE_STRINGS(cmdExamplePersist           , L"Persistente"                      , L"Persist"                       , L"Persistente"                        );

		SET_LANGUAGE_STRINGS(cmdExampleCondEqual         , L"Igual"                            , L"Equal"                         , L"Igual"                              );
		SET_LANGUAGE_STRINGS(cmdExampleCondNotEqual      , L"Diferente"                        , L"Not Equal"                     , L"Diferente"                          );
		SET_LANGUAGE_STRINGS(cmdExampleCondGreater       , L"Maior"                            , L"Greater"                       , L"Mayor"                              );
		SET_LANGUAGE_STRINGS(cmdExampleCondGreaterEqual  , L"Maior ou Igual"                   , L"Greater or Equal"              , L"Mayor o Igual"                      );
		SET_LANGUAGE_STRINGS(cmdExampleCondLesser        , L"Menor"                            , L"Lesser"                        , L"Menor"                              );
		SET_LANGUAGE_STRINGS(cmdExampleCondLesserEqual   , L"Menor ou Igual"                   , L"Lesser or Equal"               , L"Menor o Igual"                      );

		SET_LANGUAGE_STRINGS(cmdExampleReadAD            , L"Leitura de A/D"                   , L"Read A/D"                      , L"Lectura de A/D"                     );
		SET_LANGUAGE_STRINGS(cmdExampleWriteDA           , L"Escrita no D/A"                   , L"Write D/A"                     , L"Escrita no D/A"                     );

		SET_LANGUAGE_STRINGS(cmdExamplePWM               , L"Saída PWM"                        , L"PWM Output"                    , L"Salida PWM"                         );
		SET_LANGUAGE_STRINGS(cmdExampleRampDA            , L"Rampa de Aceleração/Desaceleração", L"Acceleration/Deceleration Ramp", L"Rampa de Aceleracion/Desaceleracion");
		SET_LANGUAGE_STRINGS(cmdExampleReadEnc           , L"Leitura de Encoder"               , L"Read Encoder"                  , L"Lectura de Encoder"                 );
		SET_LANGUAGE_STRINGS(cmdExampleResetEnc          , L"Escrita no Encoder"               , L"Write Encoder"                 , L"Escrita de Encoder"                 );
		SET_LANGUAGE_STRINGS(cmdExamplePID               , L"PID"                              , L"PID"                           , L"PID"                                );

		SET_LANGUAGE_STRINGS(cmdExampleWriteChar         , L"Escrita de Caracter"              , L"Write Char"                    , L"Escrita de Caracteres"              );
		SET_LANGUAGE_STRINGS(cmdExampleReadChar          , L"Leitura de Caracter"              , L"Read Char"                     , L"Lectura de Caracteres"              );
		SET_LANGUAGE_STRINGS(cmdExampleReadFormatString  , L"Ler String Formatada"             , L"Read Formatted String"         , L"Leer String Formatada"              );
		SET_LANGUAGE_STRINGS(cmdExampleWriteFormatString , L"Escrever String Formatada"        , L"Write Formatted String"        , L"Escribir String Formatada"          );

		SET_LANGUAGE_STRINGS(cmdExampleReadUSS           , L"Leitura USS"                      , L"Read USS"                      , L"Lectura USS"                        );
		SET_LANGUAGE_STRINGS(cmdExampleWriteUSS          , L"Escrita USS"                      , L"Write USS"                     , L"Escrita USS"                        );
		SET_LANGUAGE_STRINGS(cmdExampleReadNS600         , L"Leitura de NS-600 Yaskawa"        , L"Read NS-600 Yaskawa"           , L"Lectura de NS-600 Yaskawa"          );
		SET_LANGUAGE_STRINGS(cmdExampleWriteNS600        , L"Escrita de NS-600 Yaskawa"        , L"Write NS-600 Yaskawa"          , L"Escrita de NS-600 Yaskawa"          );

		SET_LANGUAGE_STRINGS(cmdExampleReadModBUS        , L"Ler Registrador ModBUS"           , L"Read ModBUS Register"          , L"Leer Registrador ModBUS"            );
		SET_LANGUAGE_STRINGS(cmdExampleWriteModBUS       , L"Escrever Registrador ModBUS"      , L"Write ModBUS Register"         , L"Escribir Registrador ModBUS"        );

		SET_LANGUAGE_STRINGS(cmdExampleAdcLed            , L"Barra de Leds - A/D"              , L"Leds Bar - A/D"                , L"Barra de Leds - A/D"                );
		SET_LANGUAGE_STRINGS(cmdExampleSemaphore         , L"Semáforo"                         , L"Semaphore"                     , L"Semaforo"                           );
		SET_LANGUAGE_STRINGS(cmdExampleTester            , L"Testador"                         , L"Tester"                        , L"Testeador"                          );
	}

	switch(POPSettings.idLanguage) {
		case  1: return pEN;
		case  2: return pES;
		default: return pPTBR;
	}
}

PCWSTR getRibbonLocalizedTooltipTitle(UINT nCmdID)
{
	PCWSTR pPTBR = L"", pEN = L"", pES = L"";

	switch(nCmdID) {
		SET_LANGUAGE_STRINGS(cmdFileNew                  , L"Novo (Control + N)"                           , L"New (Control + N)"                         , L"Nuevo (Control + N)"                            );
		SET_LANGUAGE_STRINGS(cmdFileOpen                 , L"Abrir (Control + O)"                          , L"Open (Control + O)"                        , L"Abrir (Control + O)"                            );
		SET_LANGUAGE_STRINGS(cmdFileSave                 , L"Salvar (Control + S)"                         , L"Save (Control + S)"                        , L"Salvar (Control + S)"                           );
		SET_LANGUAGE_STRINGS(cmdFileSaveAsLadder         , L"Salvar como Diagrama Ladder"                         , L"Save (Control + S)"                        , L"Salvar (Control + S)"                           );
		SET_LANGUAGE_STRINGS(cmdFileSaveAsText           , L"Exportar como arquivo texto (Control + E)"    , L"Export as Text File (Control + E)"         , L"Exportar como archivo texto (Control + E)"      );

		SET_LANGUAGE_STRINGS(cmdUndo                     , L"Desfazer (Control + Z)"                       , L"Undo (Control + Z)"                        , L"Deshacer (Control + Z)"                         );
		SET_LANGUAGE_STRINGS(cmdRedo                     , L"Refazer (Control + Y)"                        , L"Redo (Control + Y)"                        , L"Rehacer (Control + Y)"                          );
		SET_LANGUAGE_STRINGS(cmdMoveLineUp               , L"Mover Acima (Shift + Cima)"                   , L"Move Up (Shift + Up)"                      , L"Mover hacia arriba (Shift + Arriba)"            );
		SET_LANGUAGE_STRINGS(cmdMoveLineDown             , L"Mover Abaixo (Shift + Baixo)"                 , L"Move Down (Shift + Down)"                  , L"Mover hacia abajo (Shift + Abajo)"              );
		SET_LANGUAGE_STRINGS(cmdInsertLineAfter          , L"Inserir Após (Insert)"                        , L"Insert After (Insert)"                     , L"Inserir despues (Insert)"                       );
		SET_LANGUAGE_STRINGS(cmdInsertLineBefore         , L"Inserir Antes (Shift + Insert)"               , L"Insert Before (Shift + Insert)"            , L"Inserir antes (Shift + Insert)"                 );
		SET_LANGUAGE_STRINGS(cmdGoHome                   , L"Início (Shift + Home)"                        , L"Home (Shift + Home)"                       , L"Inicio (Shift + Home)"                          );
		SET_LANGUAGE_STRINGS(cmdGoEnd                    , L"Final (Shift + End)"                          , L"End (Shift + End)"                         , L"Final (Shift + End)"                            );
		SET_LANGUAGE_STRINGS(cmdInstrParallel            , L"Paralelo (P)"                                 , L"Parallel (P)"                              , L"Paralelo (P)"                                   );
		SET_LANGUAGE_STRINGS(cmdCopyInstr                , L"Copiar (Control + C)"                         , L"Copy (Control + C)"                        , L"Copiar (Control + C)"                           );
		SET_LANGUAGE_STRINGS(cmdPasteInstr               , L"Colar (Control + V)"                            , L"Paste (Control + V)"                     , L"Pegar (Control + V)"                            );
		SET_LANGUAGE_STRINGS(cmdDeleteInstr              , L"Excluir (Delete)"                             , L"Delete (Delete)"                           , L"Excluir (Delete)"                               );
		SET_LANGUAGE_STRINGS(cmdDeleteLine               , L"Excluir (Shift + Delete)"                     , L"Delete (Shift + Delete)"                   , L"Excluir (Shift + Delete)"                       );
		SET_LANGUAGE_STRINGS(cmdFindDialog               , L"Localizar e Substituir (F3)"                  , L"Find and Replace (F3)"                     , L"Localizar y Substituir (F3)"                    );
		SET_LANGUAGE_STRINGS(cmdFind                     , L"Localizar Próxima (Shift+F3)"                 , L"Find Next (Shift+F3)"                      , L"Localizar Proxima (Shift+F3)"                   );

		SET_LANGUAGE_STRINGS(cmdInstrComment             , L"Comentário (;)"                               , L"Comment (;)"                               , L"Comentario (;)"                                 );

		SET_LANGUAGE_STRINGS(cmdInstrContact             , L"Contato (C)"                                  , L"Contact (C)"                               , L"Contacto (C)"                                   );
		SET_LANGUAGE_STRINGS(cmdInstrCoil                , L"Bobina (B)"                                   , L"Coil (B)"                                  , L"Bobina (B)"                                     );
		SET_LANGUAGE_STRINGS(cmdInstrOneShotFalling      , L"Borda de Descida (\\)"                        , L"One Shot Falling (\\)"                     , L"Borde de bajada (\\)"                           );
		SET_LANGUAGE_STRINGS(cmdInstrOneShotRising       , L"Borda de Subida (/)"                          , L"One Shot Rising (/)"                       , L"Borde de subida (/)"                            );

		SET_LANGUAGE_STRINGS(cmdInstrTimerON             , L"Atraso para Ligar (A)"                        , L"Timer ON (A)"                              , L"Retrazo para prender (A)"                       );
		SET_LANGUAGE_STRINGS(cmdInstrTimerOFF            , L"Atraso para Desligar (Shift + A)"             , L"Timer OFF (Shift + A)"                     , L"Retrazo para apagar (Shift + A)"                );
		SET_LANGUAGE_STRINGS(cmdInstrTimerONRet          , L"Atraso com Memória (T)"                       , L"Timer ON Retentive (T)"                    , L"Retrazo con memoria (T)"                        );
		SET_LANGUAGE_STRINGS(cmdInstrTimerReset          , L"Zerar (Z)"                                    , L"Reset (Z)"                                 , L"______ (Z)"                                     );

		SET_LANGUAGE_STRINGS(cmdInstrCounterInc          , L"Incremental (I)"                              , L"Incremental (I)"                           , L"Incremental (I)"                                );
		SET_LANGUAGE_STRINGS(cmdInstrCounterDec          , L"Decremental (D)"                              , L"Decremental (D)"                           , L"Decrementalo (D)"                               );
		SET_LANGUAGE_STRINGS(cmdInstrCounterCirc         , L"Circular (Shift + C)"                         , L"Circular (Shift + C)"                      , L"Circular (Shift + C)"                           );
		SET_LANGUAGE_STRINGS(cmdInstrCounterReset        , L"Zerar (Z)"                                    , L"Reset (Z)"                                 , L"______ (Z)"                                     );

		SET_LANGUAGE_STRINGS(cmdInstrMathAdd             , L"Somar (+)"                                    , L"Add (+)"                                   , L"Sumar (+)"                                      );
		SET_LANGUAGE_STRINGS(cmdInstrMathSub             , L"Subtrair (-)"                                 , L"Subtract (-)"                              , L"Subtrair (-)"                                   );
		SET_LANGUAGE_STRINGS(cmdInstrMathMult            , L"Multiplicar (*)"                              , L"Multiply (*)"                              , L"Multiplicar (*)"                                );
		SET_LANGUAGE_STRINGS(cmdInstrMathDivide          , L"Dividir (Shift + /)"                          , L"Divide (Shift + /)"                        , L"Dividir (Shift + /)"                            );

		SET_LANGUAGE_STRINGS(cmdInstrMov                 , L"Mover Valor (M)"                              , L"Move Value (M)"                            , L"Mover valor (M)"                                );
		SET_LANGUAGE_STRINGS(cmdInstrSetBit              , L"Liga / Desliga Bit (Control + B)"             , L"Set / Reset Bit (Control + B)"             , L"Prende / Apaga Bit (Control + B)"               );
		SET_LANGUAGE_STRINGS(cmdInstrCheckBit            , L"Checar Bit (Shift + B)"                       , L"Check Bit (Shift + B)"                     , L"Chequear Bit (Shift + B)"                       );

		SET_LANGUAGE_STRINGS(cmdInstrCondEqual           , L"Igual (=)"                                    , L"Equal (=)"                                 , L"Igual (=)"                                      );
		SET_LANGUAGE_STRINGS(cmdInstrCondNotEqual        , L"Diferente (!)"                                , L"Not Equal (!)"                             , L"Diferente (!)"                                  );
		SET_LANGUAGE_STRINGS(cmdInstrCondGreater         , L"Maior (>)"                                    , L"Greater (>)"                               , L"Mayor (>)"                                      );
		SET_LANGUAGE_STRINGS(cmdInstrCondGreaterEqual    , L"Maior ou Igual (.)"                           , L"Greater or Equal (.)"                      , L"Mayor o Igual (.)"                              );
		SET_LANGUAGE_STRINGS(cmdInstrCondLesser          , L"Menor (<)"                                    , L"Lesser (<)"                                , L"Menor (<)"                                      );
		SET_LANGUAGE_STRINGS(cmdInstrCondLesserEqual     , L"Menor ou Igual (,)"                           , L"Lesser or Equal (,)"                       , L"Menor o Igual (,)"                              );

		SET_LANGUAGE_STRINGS(cmdInstrReadAD              , L"Leitura de A/D (Control + A)"                 , L"Read A/D (Control + A)"                    , L"Lectura de A/D (Control + A)"                   );
		SET_LANGUAGE_STRINGS(cmdInstrWriteDA             , L"Escrita no D/A (Control + D)"                 , L"Write D/A (Control + D)"                   , L"Escrita no D/A (Control + D)"                   );

		SET_LANGUAGE_STRINGS(cmdInstrPWM                 , L"Saída PWM (Shift + P)"                        , L"PWM Output (Shift + P)"                    , L"Salida PWM (Shift + P)"                         );
		SET_LANGUAGE_STRINGS(cmdInstrRampDA              , L"Rampa de Aceleração/Desaceleração (Shift + R)", L"Acceleration/Deceleration Ramp (Shift + R)", L"Rampa de Aceleracion/Desaceleracion (Shift + R)");
		SET_LANGUAGE_STRINGS(cmdInstrReadEnc             , L"Leitura de Encoder (E)"                       , L"Read Encoder (E)"                          , L"Lectura de Encoder (E)"                         );
		SET_LANGUAGE_STRINGS(cmdInstrResetEnc            , L"Escrita no Encoder (Shift + E)"               , L"Write Encoder (Shift + E)"                 , L"Escrita de Encoder (Shift + E)"                 );

		SET_LANGUAGE_STRINGS(cmdInstrReadUSS             , L"Leitura USS (Shift + U)"                      , L"Read USS (Shift + U)"                      , L"Lectura USS (Shift + U)"                        );
		SET_LANGUAGE_STRINGS(cmdInstrWriteUSS            , L"Escrita USS (U)"                              , L"Write USS (U)"                             , L"Escrita USS (U)"                                );
		SET_LANGUAGE_STRINGS(cmdInstrReadNS600           , L"Leitura de NS-600 Yaskawa (Shift + Y)"        , L"Read NS-600 Yaskawa (Shift + Y)"           , L"Lectura de NS-600 Yaskawa (Shift + Y)"          );
		SET_LANGUAGE_STRINGS(cmdInstrWriteNS600          , L"Escrita de NS-600 Yaskawa (Y)"                , L"Write NS-600 Yaskawa (Y)"                  , L"Escrita de NS-600 Yaskawa (Y)"                  );

		SET_LANGUAGE_STRINGS(cmdInstrReadModBUS          , L"Ler Registrador ModBUS (Shift + X)"           , L"Read ModBUS Register (Shift + X)"          , L"Leer Registrador ModBUS (Shift + X)"            );
		SET_LANGUAGE_STRINGS(cmdInstrWriteModBUS         , L"Escrever Registrador ModBUS (X)"              , L"Write ModBUS Register (X)"                 , L"Escribir Registrador ModBUS (X)"                );

		SET_LANGUAGE_STRINGS(cmdConfig                   , L"Projeto (F2)"                                 , L"Project (F2)"                              , L"Proyecto (F2)"                                  );

		SET_LANGUAGE_STRINGS(cmdSimulation               , L"Modo de Simulação (F7)"                       , L"Simulation mode (F7)"                      , L"Modo de Simulacion (F7)"                        );
		SET_LANGUAGE_STRINGS(cmdSimulationExit           , L"Sair da Simulação (ESC)"                      , L"Exit Simulation (ESC)"                     , L"Salir de Simulacion (ESC)"                      );
		SET_LANGUAGE_STRINGS(cmdSimulationStart          , L"Iniciar (I)"                                  , L"Start (I)"                                 , L"Iniciar (I)"                                    );
		SET_LANGUAGE_STRINGS(cmdSimulationPause          , L"Pausar (P)"                                   , L"Pause (P)"                                 , L"Pausar (P)"                                     );
		SET_LANGUAGE_STRINGS(cmdSimulationSingleCycle    , L"Simples Ciclo (Enter)"                        , L"Single Cycle (Return)"                     , L"Simples ciclo (Enter)"                          );

		SET_LANGUAGE_STRINGS(cmdCompile                  , L"Compilar (F5)"                                , L"Compile (F5)"                              , L"Compilar (F5)"                                  );
		SET_LANGUAGE_STRINGS(cmdCompileAndProgram        , L"Compilar e Gravar (F6)"                       , L"Compile and Program (F6)"                  , L"Compilar y Grabar (F6)"                         );

		SET_LANGUAGE_STRINGS(cmdDebug                    , L"Depurar (F4)"                                 , L"Debug (F4)"                                , L"Depurar (F4)"                                   );

		SET_LANGUAGE_STRINGS(cmdUserManual               , L"Manual (F1)"                                  , L"Manual (F1)"                               , L"Manual (F1)"                                    );

		// Comandos sem um atalho podem usar o label normal
		default: return getRibbonLocalizedLabel(nCmdID);
	}

	switch(POPSettings.idLanguage) {
		case  1: return pEN;
		case  2: return pES;
		default: return pPTBR;
	}
}

PCWSTR getRibbonLocalizedLabelDescription(UINT nCmdID)
{
	PCWSTR pPTBR = L"", pEN = L"", pES = L"";

	switch(nCmdID) {
			SET_LANGUAGE_STRINGS(cmdFileSaveAsLadder,
				L"Salvar o Diagrama Ladder atual como um novo arquivo.",
				L"Save as Ladder Diagram",
				L"Salvar como Diagrama Ladder");
			SET_LANGUAGE_STRINGS(cmdFileSaveAsC,
				L"Exportar o Diagrama Ladder atual como um novo arquivo em Linguagem C.",
				L"Export as C File",
				L"Exportar como archivo C");
			SET_LANGUAGE_STRINGS(cmdFileSaveAsText,
				L"Exportar o Diagrama Ladder atual como um novo arquivo de texto.",
				L"Export as Text File",
				L"Exportar como arquivo texto");
			SET_LANGUAGE_STRINGS(cmdInsertLineBefore,
				L"Insere uma linha vazia antes da linha atualmente selecionada.",
				L"Insert Before",
				L"Inserir antes");
			SET_LANGUAGE_STRINGS(cmdInsertLineAfter,
				L"Insere uma linha vazia após a linha atualmente selecionada.",
				L"Insert After",
				L"Inserir despues");
			SET_LANGUAGE_STRINGS(cmdCopyLine,
				L"Copia a linha atualmente selecionada para a memória.",
				L"Copy Line",
				L"Copiar Linea");
			SET_LANGUAGE_STRINGS(cmdPasteLineBefore,
				L"Colar a linha previamente copiada antes da linha atualmente selecionada.",
				L"Paste Before",
				L"Pegar antes");
			SET_LANGUAGE_STRINGS(cmdPasteLineAfter,
				L"Colar a linha previamente copiada após a linha atualmente selecionada.",
				L"Paste After",
				L"Pegar despues");
			SET_LANGUAGE_STRINGS(cmdInstrCircuitOpen,
				L"Inserir circuito aberto na posição do cursor.",
				L"Open Circuit",
				L"Circuito abierto");
			SET_LANGUAGE_STRINGS(cmdInstrCircuitClosed,
				L"Inserir circuito fechado na posição do cursor.",
				L"Closed Circuit",
				L"Circuito abierto");
			SET_LANGUAGE_STRINGS(cmdInstrMasterRelayControl,
				L"Inserir chave geral na posição do cursor. Utilizado para desativar o barramento abaixo desta instrução.",
				L"Master Relay Control",
				L"Llave general");
			SET_LANGUAGE_STRINGS(cmdInstrShiftRegister,
				L"Inserir fila de variáveis na posição do cursor.",
				L"Shift Register",
				L"Fila de Variables");
			SET_LANGUAGE_STRINGS(cmdInstrLookUpTable,
				L"Inserir tabela de busca na posição do cursor.",
				L"Look-Up Table",
				L"Tabla de Busca");
			SET_LANGUAGE_STRINGS(cmdInstrPieceWiseLinear,
				L"Inserir linearização por segmentos na posição do cursor.",
				L"Piecewise Linear",
				L"Linear por seguimientos");
			SET_LANGUAGE_STRINGS(cmdInstrRand,
				L"Inserir Número Randômico na posição do cursor.",
				L"Random Number",
				L"Numero Randonico");
			SET_LANGUAGE_STRINGS(cmdCompile,
				L"Gerar arquivo .hex para gravação na POP-7 a patir do Diagrama Ladder.",
				L"Compile",
				L"Nuevo");
	}

	switch(POPSettings.idLanguage) {
		case  1: return pEN;
		case  2: return pES;
		default: return pPTBR;
	}
}

PCWSTR getRibbonLocalizedTooltipDescription(UINT nCmdID)
{
	PCWSTR pPTBR = L"", pEN = L"", pES = L"";

	switch(nCmdID) {
			SET_LANGUAGE_STRINGS(cmdFileNew                  ,
				L"Criar um novo Diagrama Ladder.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdFileOpen                 ,
				L"Abrir um Diagrama Ladder existente.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdFileClose                ,
				L"Fechar o diagrama atual.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdFileSave                 ,
				L"Salvar o Diagrama Ladder atual.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdFileSaveAsText           ,
				L"Exportar Diagrama Ladder atual como um novo arquivo de texto.",
				L"",
				L"");

			SET_LANGUAGE_STRINGS(cmdUndo                     ,
				L"Desfazer a última ação.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdRedo                     ,
				L"Refazer a última ação desfeita.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInsertLine               ,
				L"Obter outras formas para inserir uma linha",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdMoveLineUp               ,
				L"Mover a linha atualmente selecionada para cima",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdMoveLineDown             ,
				L"Mover a linha atualmente selecionada para baixo",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdCopyLine                 ,
				L"Copia a linha atualmente selecionada para a memória.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdPasteLine                ,
				L"Obter outras formas para colar uma linha",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdPasteLineBefore          ,
				L"Colar a linha previamente copiada antes da linha atualmente selecionada.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdPasteLineAfter           ,
				L"Colar a linha previamente copiada após a linha atualmente selecionada.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInsertLineAfter          ,
				L"Insere uma linha vazia após a linha atualmente selecionada.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInsertLineBefore         ,
				L"Insere uma linha vazia antes da linha atualmente selecionada.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdGoHome                   ,
				L"Move o cursor para o início do diagrama.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdGoEnd                    ,
				L"Move o cursor para o final do diagrama.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInstrParallel            ,
				L"Inserir início de paralelo na posição do cursor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdCopyInstr                ,
				L"Copia o objeto selecionado para a memória.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdPasteInstr               ,
				L"Insere na posição atual o objeto previamente copiado para a memória.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdDeleteInstr              ,
				L"Exclui o comando atualmente selecionado",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdDeleteLine               ,
				L"Exclui a linha atualmente selecionada",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdFindDialog               ,
				L"Abrir a janela de busca.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdFind                     ,
				L"Procura pelo texto informado na caixa de busca a partir do objeto atualmente selecionado.",
				L"",
				L"");

			SET_LANGUAGE_STRINGS(cmdInstrComment             ,
				L"Inserir comentário na linha atual. Se a linha não estiver vazia, uma nova será criada.",
				L"",
				L"");

			SET_LANGUAGE_STRINGS(cmdInstrContact             ,
				L"Inserir um contato na posição do cursor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInstrCoil                ,
				L"Inserir bobina na posição do cursor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInstrOneShotFalling      ,
				L"Inserir detecção de borda de descida na posição do cursor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInstrOneShotRising       ,
				L"Inserir detecção de borda de subida na posição do cursor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInstrCircuitOpen         ,
				L"Inserir circuito aberto na posição do cursor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInstrCircuitClosed       ,
				L"Inserir circuito fechado na posição do cursor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInstrMasterRelayControl  ,
				L"Inserir chave geral na posição do cursor. Utilizado para desativar o barramento abaixo desta instrução.",
				L"",
				L"");

			SET_LANGUAGE_STRINGS(cmdInstrTimerON             ,
				L"Inserir temporizador com atraso para ligar na posição do cursor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInstrTimerOFF            ,
				L"Inserir temporizador com atraso para desligar na posição do cursor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInstrTimerONRet          ,
				L"Abrir exemplo de instrução atraso com memória.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInstrSchedule            ,
				L"Inserir tarefa agendada na posição do cursor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInstrTimerReset          ,
				L"Inserir zerar atraso na posição do cursor.",
				L"",
				L"");

			SET_LANGUAGE_STRINGS(cmdInstrCounterInc          ,
				L"Inserir contador incremental na posição do cursor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInstrCounterDec          ,
				L"Inserir contador decremental na posição do cursor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInstrCounterCirc         ,
				L"Inserir contador circular na posição do cursor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInstrCounterReset        ,
				L"Inserir zerar contador na posição do cursor.",
				L"",
				L"");

			SET_LANGUAGE_STRINGS(cmdInstrMathAdd             ,
				L"Inserir instrução matemática somar na posição do cursor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInstrMathSub             ,
				L"Inserir instrução matemática subtrair na posição do cursor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInstrMathMult            ,
				L"Inserir instrução matemática multiplicar na posição do cursor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInstrMathDivide          ,
				L"Inserir instrução matemática dividir na posição do cursor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInstrMathModulo          ,
				L"Inserir instrução matemática resto de divisão na posição do cursor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInstrMathSqrt            ,
				L"Inserir instrução matemática raiz quadrada na posição do cursor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInstrShiftRegister       ,
				L"Inserir fila de variáveis na posição do cursor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInstrLookUpTable         ,
				L"Inserir tabela de busca na posição do cursor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInstrPieceWiseLinear     ,
				L"Inserir linearização por segmentos na posição do cursor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInstrRand                ,
				L"Inserir Número Randômico na posição do cursor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInstrAbs                 ,
				L"Inserir a instrução de Valor Absoluto na posição do cursor.",
				L"",
				L"");

			SET_LANGUAGE_STRINGS(cmdInstrMov                 ,
				L"Inserir mover valor na posição do cursor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInstrSetBit              ,
				L"Inserir liga/desliga bit na posição do cursor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInstrCheckBit            ,
				L"Inserir checar bit na posição do cursor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInstrPersist             ,
				L"Inserir persistente na posição do cursor.",
				L"",
				L"");

			SET_LANGUAGE_STRINGS(cmdInstrCondEqual           ,
				L"Inserir condicional igual na posição do cursor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInstrCondNotEqual        ,
				L"Inserir condicional diferente na posição do cursor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInstrCondGreater         ,
				L"Inserir condicional maior na posição do cursor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInstrCondGreaterEqual    ,
				L"Inserir condicional maior ou igual na posição do cursor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInstrCondLesser          ,
				L"Inserir condicional menor na posição do cursor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInstrCondLesserEqual     ,
				L"Inserir condicional menor ou igual na posição do cursor.",
				L"",
				L"");

			SET_LANGUAGE_STRINGS(cmdInstrReadAD              ,
				L"Inserir leitura de A/D na posição do cursor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInstrWriteDA             ,
				L"Inserir escrita no D/A na posição do cursor.",
				L"",
				L"");

			SET_LANGUAGE_STRINGS(cmdInstrPWM                 ,
				L"Inserir saída PWM na posição do cursor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInstrRampDA              ,
				L"Inserir rampa de aceleração/desaceleração na posição do cursor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInstrReadEnc             ,
				L"Inserir leitura de encoder na posição do cursor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInstrResetEnc            ,
				L"Inserir escrita no encoder na posição do cursor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInstrPID                 ,
				L"Inserir Controle PID na posição do cursor.",
				L"",
				L"");

			SET_LANGUAGE_STRINGS(cmdInstrWriteChar           ,
				L"Inserir escrita de caracter na posição do cursor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInstrReadChar            ,
				L"Inserir leitura de caracter na posição do cursor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInstrReadFormatString    ,
				L"Inserir ler string formatada na posição do cursor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInstrWriteFormatString   ,
				L"Inserir escrever string formatada na posição do cursor.",
				L"",
				L"");

			SET_LANGUAGE_STRINGS(cmdInstrReadUSS             ,
				L"Inserir leitura uss na posição do cursor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInstrWriteUSS            ,
				L"Inserir escrita uss na posição do cursor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInstrReadNS600           ,
				L"Inserir leitura de NS-600 Yaskawa na posição do cursor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInstrWriteNS600          ,
				L"Inserir escrita no NS-600 Yaskawa na posição do cursor.",
				L"",
				L"");

			SET_LANGUAGE_STRINGS(cmdInstrReadModBUS          ,
				L"Inserir ler registrador modbus na posição do cursor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdInstrWriteModBUS         ,
				L"Inserir escrever registrador modbus na posição do cursor.",
				L"",
				L"");

			SET_LANGUAGE_STRINGS(cmdConfig                   ,
				L"Abrir a janela de configurações do projeto atual.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdSettings                 ,
				L"Abrir a janela para configuração do programa POPTools como porta serial para gravação, desativar avisos, etc.",
				L"",
				L"");

			SET_LANGUAGE_STRINGS(cmdSimulation               ,
				L"Entrar no modo de simulação do Diagrama Ladder.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdSimulationExit           ,
				L"Sair do modo de simulação do Diagrama Ladder.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdSimulationStart          ,
				L"Iniciar a simulação em tempo real do Diagrama Ladder.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdSimulationPause          ,
				L"Pausar a simulação em tempo real do Diagrama Ladder.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdSimulationStop           ,
				L"Interromper a simulação do Diagrama Ladder, retornando toda a lógica ao estado inicial.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdSimulationSingleCycle    ,
				L"Executar um único ciclo.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdSimulationLogStart       ,
				L"Iniciar o registro de dados da Simulação.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdSimulationLogStop        ,
				L"Parar o registro de dados da Simulação.",
				L"",
				L"");

			SET_LANGUAGE_STRINGS(cmdCompile                  ,
				L"Gerar arquivo .hex para gravação na POP-7 a patir do Diagrama Ladder.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdCompileAndProgram        ,
				L"Gerar arquivo .hex e gravá-lo na POP-7 a partir do Diagrama Ladder.",
				L"",
				L"");

			SET_LANGUAGE_STRINGS(cmdDebug                    ,
				L"Abrir janela de depuração da POP-7, onde é possível ler e alterar seus registradores.",
				L"",
				L"");

			SET_LANGUAGE_STRINGS(cmdSplitUserManual          ,
				L"Abrir o Manual do Usuário, contendo a ajuda para todo o programa.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdUserManual          ,
				L"Abrir o Manual do Usuário, contendo a ajuda para todo o programa.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdKeyboardManual           ,
				L"Abrir o Manual do Teclado, contendo todos os atalhos para os comandos da interface.",
				L"",
				L"");

			// Example comands list
			SET_LANGUAGE_STRINGS(cmdExamples                 ,
				L"Abrir a lista de lógicas de exemplo.",
				L"",
				L"");

			SET_LANGUAGE_STRINGS(cmdExampleComment           ,
				L"Abrir exemplo de comentário.",
				L"",
				L"");

			SET_LANGUAGE_STRINGS(cmdExampleContact           ,
				L"Abrir exemplo de instrução contato.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExampleCoil              ,
				L"Abrir exemplo de instrução bobina.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExampleOneShotFalling    ,
				L"Abrir exemplo de instrução detecção de borda de descida.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExampleOneShotRising     ,
				L"Abrir exemplo de instrução detecção de borda de subida.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExampleCircuitOpen       ,
				L"Abrir exemplo de instrução circuito aberto.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExampleCircuitClosed     ,
				L"Abrir exemplo de instrução circuito fechado.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExampleMasterRelayControl,
				L"Abrir exemplo de instrução chave geral.",
				L"",
				L"");

			SET_LANGUAGE_STRINGS(cmdExampleTimerON           ,
				L"Abrir exemplo de instrução temporizador com atraso para ligar.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExampleTimerOFF          ,
				L"Abrir exemplo de instrução temporizador com atraso para desligar.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExampleTimerONRet        ,
				L"Abrir exemplo de instrução atraso com memória.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExampleSchedule          ,
				L"Abrir exemplo de instrução tarefa agendada.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExampleTimerReset        ,
				L"Abrir exemplo de instrução zerar atraso.",
				L"",
				L"");

			SET_LANGUAGE_STRINGS(cmdExampleCounterInc        ,
				L"Abrir exemplo de instrução contador incremental.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExampleCounterDec        ,
				L"Abrir exemplo de instrução contador decremental.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExampleCounterCirc       ,
				L"Abrir exemplo de instrução contador circular.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExampleCounterReset      ,
				L"Abrir exemplo de instrução zerar contador.",
				L"",
				L"");

			SET_LANGUAGE_STRINGS(cmdExampleMathAdd           ,
				L"Abrir exemplo de instrução matemática somar.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExampleMathSub           ,
				L"Abrir exemplo de instrução matemática subtrair.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExampleMathMult          ,
				L"Abrir exemplo de instrução matemática multiplicar.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExampleMathDivide        ,
				L"Abrir exemplo de instrução matemática dividir.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExampleMathModulo        ,
				L"Abrir exemplo de instrução matemática resto de divisão.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExampleMathSqrt          ,
				L"Abrir exemplo de instrução matemática raiz quadrada.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExampleShiftRegister     ,
				L"Abrir exemplo de instrução fila de variáveis.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExampleLookUpTable       ,
				L"Abrir exemplo de instrução tabela de busca.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExamplePieceWiseLinear   ,
				L"Abrir exemplo de instrução linearização por segmentos.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExampleRand              ,
				L"Abrir exemplo de Número Randômico.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExampleAbs               ,
				L"Abrir exemplo de instrução que calcula Valor Absoluto.",
				L"",
				L"");

			SET_LANGUAGE_STRINGS(cmdExampleMov               ,
				L"Abrir exemplo de instrução mover valor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExampleSetBit            ,
				L"Abrir exemplo de instrução liga/desliga bit.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExampleCheckBit          ,
				L"Abrir exemplo de instrução checar bit.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExamplePersist           ,
				L"Abrir exemplo de instrução persistente.",
				L"",
				L"");

			SET_LANGUAGE_STRINGS(cmdExampleCondEqual         ,
				L"Abrir exemplo de instrução condicional igual.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExampleCondNotEqual      ,
				L"Abrir exemplo de instrução condicional diferente.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExampleCondGreater       ,
				L"Abrir exemplo de instrução condicional maior.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExampleCondGreaterEqual  ,
				L"Abrir exemplo de instrução condicional maior ou igual.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExampleCondLesser        ,
				L"Abrir exemplo de instrução condicional menor.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExampleCondLesserEqual   ,
				L"Abrir exemplo de instrução condicional menor ou igual.",
				L"",
				L"");

			SET_LANGUAGE_STRINGS(cmdExampleReadAD            ,
				L"Abrir exemplo de instrução leitura de A/D.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExampleWriteDA           ,
				L"Abrir exemplo de instrução escrita no D/A.",
				L"",
				L"");

			SET_LANGUAGE_STRINGS(cmdExamplePWM               ,
				L"Abrir exemplo de instrução saída PWM.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExampleRampDA            ,
				L"Abrir exemplo de instrução rampa de aceleração/desaceleração.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExampleReadEnc           ,
				L"Abrir exemplo de instrução leitura de encoder.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExampleResetEnc          ,
				L"Abrir exemplo de instrução escrita no encoder.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExamplePID               ,
				L"Abrir exemplo de instrução Controle de PID.",
				L"",
				L"");

			SET_LANGUAGE_STRINGS(cmdExampleWriteChar         ,
				L"Abrir exemplo de instrução escrita de caracter.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExampleReadChar          ,
				L"Abrir exemplo de instrução leitura de caracter.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExampleReadFormatString  ,
				L"Abrir exemplo de instrução ler string formatada.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExampleWriteFormatString ,
				L"Abrir exemplo de instrução escrever string formatada.",
				L"",
				L"");

			SET_LANGUAGE_STRINGS(cmdExampleReadUSS           ,
				L"Abrir exemplo de instrução leitura uss.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExampleWriteUSS          ,
				L"Abrir exemplo de instrução escrita uss.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExampleReadNS600         ,
				L"Abrir exemplo de instrução leitura de NS-600 Yaskawa.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExampleWriteNS600        ,
				L"Abrir exemplo de instrução escrita no NS-600 Yaskawa.",
				L"",
				L"");

			SET_LANGUAGE_STRINGS(cmdExampleReadModBUS        ,
				L"Abrir exemplo de instrução ler registrador modbus.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExampleWriteModBUS       ,
				L"Abrir exemplo de instrução escrever registrador modbus.",
				L"",
				L"");

			SET_LANGUAGE_STRINGS(cmdExampleAdcLed            ,
				L"Abrir exemplo de aplicação - Barra de Leds.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExampleSemaphore         ,
				L"Abrir exemplo de aplicação - Semáforo.",
				L"",
				L"");
			SET_LANGUAGE_STRINGS(cmdExampleTester            ,
				L"Abrir exemplo de aplicação - Testador.",
				L"",
				L"");
	}

	switch(POPSettings.idLanguage) {
		case  1: return pEN;
		case  2: return pES;
		default: return pPTBR;
	}
}

const char *_(const char *in)
{
	int i;
	LangTableChar *table = l;

	for(i = 0; table != nullptr; i++) {
		if(in[i] == 0) {
			return table->out;
		}

		table = table->mapChar[(unsigned char)in[i] - 1];
	}

#ifdef _DEBUG
//	Error("No match found: '%s'", in);
#endif

	return in;
}
